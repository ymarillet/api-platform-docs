webpackJsonp([0xdb3cfc3ac9b6],{413:function(e,n){e.exports={data:{post:{html:'<h1 id="deploying-an-api-platform-app-on-heroku"><a href="#deploying-an-api-platform-app-on-heroku" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Deploying an API Platform App on Heroku</h1>\n<p><a href="http://heroku.com" target="_blank" rel="nofollow noopener noreferrer">Heroku</a> is a popular, fast, scalable and reliable <em>Platform As A Service</em> (PaaS). As Heroku offers a\nfree plan including database support through <a href="https://www.heroku.com/postgres" target="_blank" rel="nofollow noopener noreferrer">Heroku Postgres</a>, it\'s\na very convenient way to experiment with the API Platform.</p>\n<p>The API Platform Heroku integration also supports MySQL databases provided by <a href="https://addons.heroku.com/cleardb" target="_blank" rel="nofollow noopener noreferrer">the ClearDB add-on</a>.</p>\n<p>Deploying API Platform applications on Heroku is very straightforward and you will learn how to do it in this tutorial.</p>\n<p><em>Note: this tutorial works perfectly well with API Platform but also with any Symfony application based on the Symfony Standard\nEdition.</em></p>\n<p>If you don\'t already have one, <a href="https://signup.heroku.com/signup/dc" target="_blank" rel="nofollow noopener noreferrer">create an account on Heroku</a>. Then install <a href="https://devcenter.heroku.com/articles/getting-started-with-php#local-workstation-setup" target="_blank" rel="nofollow noopener noreferrer">the Heroku\ntoolbelt</a>. We guess you already\nhave a working install of <a href="http://getcomposer.org" target="_blank" rel="nofollow noopener noreferrer">Composer</a>, perfect, we will need it.</p>\n<p>Create a new API Platform project as usual:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>composer create-project api-platform/api-platform</code></pre>\n      </div>\n<p>Go to the created directory. Then install the API Heroku integration library created by the API Platform team. It we will ease the deployment.\nInstall it:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>composer require dunglas/api-platform-heroku</code></pre>\n      </div>\n<p>Heroku relies on <a href="https://devcenter.heroku.com/articles/config-vars" target="_blank" rel="nofollow noopener noreferrer">environment variables</a> for its configuration. Regardless of what provider you\nchoose for hosting your application, using environment variables to configure your production environment is a best practice.\nSo we will configure the library we just installed and remove the Incenteev Parameter Handler library that was bundled with\nAPI Platform. Parameter Handler generated the <code>app/config/parameters.yml</code> file during the installation process.</p>\n<p>Open the <code>composer.json</code> file and remove the following line from the  <code>require</code> section:</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code><span class="token property">"incenteev/composer-parameter-handler"</span><span class="token operator">:</span> <span class="token string">"~2.0"</span><span class="token punctuation">,</span>\n</code></pre>\n      </div>\n<p>Then remove the following script call from the <code>post-install-cmd</code> and <code>post-update-cmd</code> sections:</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code><span class="token string">"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters"</span><span class="token punctuation">,</span>\n</code></pre>\n      </div>\n<p>Then we must register the Composer script provided by the library we installed in the <code>scripts</code> section of the <code>composer.json</code>\nfile:</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code>    <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">"pre-install-cmd"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"Dunglas\\\\Heroku\\\\Database::createParameters"</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token property">"_"</span><span class="token operator">:</span> <span class="token string">"..."</span>\n    <span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Delete <code>app/config/parameters.yml</code> and <code>app/config/parameters.yml.dist</code> as they will not be used anymore. Then remove the following line from the <code>imports</code> section of <code>app/config/config.yml</code>:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">resource</span><span class="token punctuation">:</span> parameters.yml <span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>We will now create the Heroku <code>app.json</code> file at the root of the application directory to set the parameters of our application\nusing the external parameters feature of the Symfony container:</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"success_url"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n  <span class="token property">"env"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"SYMFONY_ENV"</span><span class="token operator">:</span> <span class="token string">"prod"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__DATABASE_DRIVER"</span><span class="token operator">:</span> <span class="token string">"pdo_pgsql"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__MAILER_TRANSPORT"</span><span class="token operator">:</span> <span class="token string">"smtp"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__MAILER_HOST"</span><span class="token operator">:</span> <span class="token string">"your-mailer.com"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__MAILER_USER"</span><span class="token operator">:</span> <span class="token string">"your-mailer-username"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__MAILER_PASSWORD"</span><span class="token operator">:</span> <span class="token string">"your-mailer-password"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__CORS_ALLOW_ORIGIN"</span><span class="token operator">:</span> <span class="token string">"https://your-client-url.com"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__LOCALE"</span><span class="token operator">:</span> <span class="token string">"en"</span><span class="token punctuation">,</span>\n    <span class="token property">"SYMFONY__SECRET"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">"generator"</span><span class="token operator">:</span> <span class="token string">"secret"</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">"addons"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"heroku-postgresql"</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"buildpacks"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://github.com/heroku/heroku-buildpack-php"</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>The file also tells the Heroku deployment system to build a PHP container and to add the Postgres add-on.</p>\n<p>If you also want to run your app locally or on another hosting provider, don\'t forget to set those environment variables\nand another one called <code>DATABASE_URL</code> containing your database <a href="https://en.wikipedia.org/wiki/Data_source_name" target="_blank" rel="nofollow noopener noreferrer">DSN</a>.\nA convenient way to manage environment variables is the <a href="https://github.com/vlucas/phpdotenv" target="_blank" rel="nofollow noopener noreferrer">PHP dotenv</a> library.</p>\n<p>We are almost done, but API Platform (and Symfony) has a particular directory structure which requires further configuration. We must tell Heroku that the document root is <code>web/</code>, and that all other\ndirectories must be private.</p>\n<p>Create a new file named <code>Procfile</code> at the root of the application directory with the following content:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token key atrule">web</span><span class="token punctuation">:</span> bin/heroku<span class="token punctuation">-</span>php<span class="token punctuation">-</span>apache2 web/\n</code></pre>\n      </div>\n<p>Our application is ready to be deployed, but Heroku dynos are not persistent and file stored directly on the filesystem\nwill be lost. It\'s problematic for our logs.</p>\n<p>Note: if you want to store files permanently, use a persistent file storage service such as Amazon S3.</p>\n<p>Heroku provides another free service, <a href="https://devcenter.heroku.com/articles/logplex" target="_blank" rel="nofollow noopener noreferrer">Logplex</a>, which allows us to centralize and\npersist applications logs. To use it we need to configure Monolog to output logs to <code>STDERR</code> instead of to a file.</p>\n<p>Open <code>app/config/config_prod.yml</code> and find the following block:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token key atrule">monolog</span><span class="token punctuation">:</span>\n    <span class="token comment"># ...</span>\n\n    <span class="token key atrule">nested</span><span class="token punctuation">:</span>\n        <span class="token key atrule">type</span><span class="token punctuation">:</span> stream\n        <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">\'%kernel.logs_dir%/%kernel.environment%.log\'</span>\n        <span class="token key atrule">level</span><span class="token punctuation">:</span> debug\n</code></pre>\n      </div>\n<p>And replace it with:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token key atrule">monolog</span><span class="token punctuation">:</span>\n    <span class="token comment"># ...</span>\n\n    <span class="token key atrule">nested</span><span class="token punctuation">:</span>\n        <span class="token key atrule">type</span><span class="token punctuation">:</span> stream\n        <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">\'php://stderr\'</span>\n        <span class="token key atrule">level</span><span class="token punctuation">:</span> debug\n</code></pre>\n      </div>\n<p>We are now ready to deploy our app!</p>\n<p>Initialize a git repository:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>git init</code></pre>\n      </div>\n<p>Add all existing files:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>git add --all</code></pre>\n      </div>\n<p>Commit:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>git commit -a -m "My first API Platform app running on Heroku!"</code></pre>\n      </div>\n<p>Create the Heroku application:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>heroku create</code></pre>\n      </div>\n<p>And deploy for the first time:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>git push heroku master</code></pre>\n      </div>\n<p>Your browser should open automatically and display the entrypoint of the API. It\'s time to create the database:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>heroku run "app/console doctrine:schema:create"</code></pre>\n      </div>\n<p><strong>We\'re done.</strong> You can play with the demo bookstore API provided with API Platform. It is ready for production and you\ncan scale it in one click from the Heroku interface.</p>\n<p>To see your logs, run <code>heroku logs --tail</code>.</p>'},navDoc:{edges:[{node:{title:"The Distribution",path:"distribution",items:[{id:"index",title:"Creating a Fully Featured API in 5 Minutes",anchors:null},{id:"testing",title:"Testing and Specifying the API",anchors:null}]}},{node:{title:"The API Component",path:"core",items:[{id:"index",title:"Introduction",anchors:null},{id:"getting-started",title:"Getting Started",anchors:[{id:"installing-api-platform-core",title:"Installing API Platform Core"},{id:"before-reading-this-documentation",title:"Before Reading this Documentation"},{id:"mapping-the-entities",title:"Mapping the Entities"}]},{id:"configuration",title:"Configuration",anchors:null},{id:"operations",title:"Operations",anchors:[{id:"enabling-and-disabling-operations",title:"Enabling and Disabling Operations"},{id:"configuring-operations",title:"Configuring Operations"},{id:"subresources",title:"Subresources"},{id:"creating-custom-operations-and-controllers",title:"Creating Custom Operations and Controllers"}]},{id:"default-order",title:"Overriding Default Order",anchors:null},{id:"filters",title:"Filters",anchors:[{id:"doctrine-orm-filters",title:"Doctrine ORM Filters"},{id:"serializer-filters",title:"Serializer Filters"},{id:"creating-custom-filters",title:"Creating Custom Filters"}]},{id:"serialization",title:"The Serialization Process",anchors:[{id:"overall-process",title:"Overall Process"},{id:"available-serializers",title:"Available Serializers"},{id:"the-serialization-context-groups-and-relations",title:"The Serialization Context, Groups and Relations"},{id:"embedding-relations",title:"Using Different Serialization Groups per Operation"},{id:"embedding-relations",title:"Embedding Relations"},{id:"changing-the-serialization-context-dynamically",title:"Changing the Serialization Context Dynamically"},{id:"name-conversion",title:"Name Conversion"},{id:"entity-identifier-case",title:"Entity Identifier Case"},{id:"writable-entity-identifier",title:"Writable Entity Identifier"},{id:"embedding-the-json-ld-context",title:"Embedding the JSON-LD Context"},{id:"decorating-a-serializer-and-add-extra-data",title:"Decorating a Serializer and Add Extra Data"}]},{id:"content-negotiation",title:"Content Negotiation",anchors:[{id:"enabling-several-formats",title:"Enabling Several Formats"},{id:"registering-a-custom-serializer",title:"Registering a Custom Serializer"},{id:"creating-a-responder",title:"Creating a Responder"},{id:"writing-a-custom-normalizer",title:"Writing a Custom Normalizer"}]},{id:"validation",title:"Validation",anchors:[{id:"using-validation-groups",title:"Using Validation Groups"},{id:"dynamic-validation-groups",title:"Dynamic Validation Groups"}]},{id:"pagination",title:"Pagination",anchors:[{id:"disabling-the-pagination",title:"Disabling the Pagination"},{id:"changing-the-number-of-items-per-page",title:"Changing the Number of Items per Page"}]},{id:"events",title:"The Event System",anchors:null},{id:"data-providers",title:"Data Providers",anchors:[{id:"creating-a-custom-data-provider",title:"Custom Collection Data Provider"},{id:"returning-a-paged-collection",title:"Custom Item Data Provider"}]},{id:"extensions",title:"Extensions",anchors:[{id:"custom-extension",title:"Custom Extension"},{id:"example",title:"Filter upon the current user"}]},{id:"jwt",title:"JWT Authentification",anchors:[{id:"installing-lexikjwtauthenticationnundle",title:"Installing LexikJWTAuthenticationBundle"},{id:"documenting-the-authentication-mechanism-with-swagger-open-api",title:"Documenting the Authentication Mechanism with Swagger/Open API"},{id:"testing-with-behat",title:"Testing with Behat"}]},{id:"security",title:"Security",anchors:null},{id:"swagger",title:"Swagger Support",anchors:[{id:"overriding-the-swagger-documentation",title:"Overriding the Swagger documentation"},{id:"using-the-swagger-context",title:"Using the Swagger Context"}]},{id:"performance",title:"Performance",anchors:[{id:"enabling-the-builtin-http-cache-invalidation-system",title:"Enabling the Builtin HTTP Cache Invalidation System"},{id:"enabling-the-metadata-cache",title:"Enabling the Metadata Cache"},{id:"using-ppm-php-pm",title:"Using PPM (PHP-PM)"},{id:"doctrine-queries-and-indexes",title:"Doctrine Queries and Indexes"}]},{id:"operation-path-naming",title:"Operation Path Naming",anchors:[{id:"configuration",title:"Configuration"},{id:"create-a-custom-operation-path-resolver",title:"Create a Custom Operation Path Naming"}]},{id:"form-data",title:'Accept "application/x-www-form-urlencoded" Form Data',anchors:null},{id:"external-vocabularies",title:"Using External Vocabularies",anchors:null},{id:"extending-jsonld-context",title:"Extending the JSON-LD context",anchors:null},{id:"fosuser-bundle",title:"FOSUserBundle Integration",anchors:[{id:"installing-the-bundle",title:"Installing the Bundle"},{id:"enabling-the-bridge",title:"Enabling the Bridge"},{id:"creating-a-user-entity-with-serialization-groups",title:'Creating a "User" Entity with Serialization Groups'}]},{id:"nelmio-api-doc",title:"NelmioApiDocBundle integration",anchors:null},{id:"angularjs-integration",title:"AngularJS Integration",anchors:[{id:"restangular",title:"Restangular"},{id:"ng-admin",title:"ng-admin"}]}]}},{node:{title:"The Schema Generator Component",path:"schema-generator",items:[{id:"index",title:"Introduction",anchors:null},{id:"getting-started",title:"Getting Started",anchors:null},{id:"configuration",title:"Configuration",anchors:null}]}},{node:{title:"The Admin Component",path:"admin",items:[{id:"index",title:"Introduction",anchors:[{id:"features",title:"Features"}]},{id:"getting-started",title:"Getting Started",anchors:[{id:"installation",title:"Installation"},{id:"creating-the-admin",title:"Creating the Admin"},{id:"customizing-the-admin",title:"Customizing the Admin"}]},{id:"authentication-support",title:"Authentication Support",anchors:null},{id:"handling-relations-to-collections",title:"Handling Relations to Collections",anchors:[{id:"using-an-autocomplete-input-for-relations",title:"Using an Autocomplete Input for Relations"}]}]}},{node:{title:"The Client Generator Component",path:"client-generator",items:[{id:"index",title:"Introduction",anchors:[{id:"features",title:"Features"}]},{id:"react",title:"React generator",anchors:null},{id:"vuejs",title:"Vue.js generator",anchors:null},{id:"troubleshooting",title:"Troubleshooting",anchors:null}]}},{node:{title:"Deployment",path:"deployment",items:[{id:"index",title:"Introduction",anchors:null},{id:"heroku",title:"Deploying an API Platform App on Heroku",anchors:null},{id:"docker",title:"Using API Platform with Docker",anchors:[{id:"services",title:"Services"},{id:"installation",title:"Installation"}]}]}},{node:{title:"Extra",path:"extra",items:[{id:"philosophy",title:"The Project's Philosophy",anchors:null},{id:"troubleshooting",title:"Troubleshooting",anchors:null},{id:"contribution-guides",title:"Contribution Guides",anchors:null},{id:"conduct",title:"Contributor Code Of Conduct",anchors:null}]}}]}},pathContext:{path:"docs/deployment/heroku",current:{path:"docs/deployment/heroku",title:"Deployment - Deploying an API Platform App on Heroku"},prev:{path:"docs/deployment/index",title:"Introduction",rootPath:"Deployment"},next:{path:"docs/deployment/docker",title:"Using API Platform with Docker",rootPath:"Deployment"}}}}});
//# sourceMappingURL=path---docs-deployment-heroku-741290397b3ff9230581.js.map