{"version":3,"sources":["webpack:///path---docs-core-serialization-51a343bdbae26de82387.js","webpack:///./.cache/json/docs-core-serialization.json"],"names":["webpackJsonp","408","module","exports","data","post","html","navDoc","edges","node","title","path","items","id","anchors","pathContext","current","prev","rootPath","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,KAAA;EAA28zDC,QAAWC,QAAUC,MAAQC,MAAA,mBAAAC,KAAA,eAAAC,QAA2DC,GAAA,QAAAH,MAAA,6CAAAI,QAAA,OAAmFD,GAAA,UAAAH,MAAA,iCAAAI,QAAA,UAA4EL,MAAQC,MAAA,oBAAAC,KAAA,OAAAC,QAAoDC,GAAA,QAAAH,MAAA,eAAAI,QAAA,OAAqDD,GAAA,kBAAAH,MAAA,kBAAAI,UAA6DD,GAAA,+BAAAH,MAAA,iCAA6EG,GAAA,oCAAAH,MAAA,sCAAuFG,GAAA,uBAAAH,MAAA,2BAA+DG,GAAA,gBAAAH,MAAA,gBAAAI,QAAA,OAA8DD,GAAA,aAAAH,MAAA,aAAAI,UAAmDD,GAAA,oCAAAH,MAAA,sCAAuFG,GAAA,yBAAAH,MAAA,2BAAiEG,GAAA,eAAAH,MAAA,iBAA6CG,GAAA,6CAAAH,MAAA,iDAA2GG,GAAA,gBAAAH,MAAA,2BAAAI,QAAA,OAAyED,GAAA,UAAAH,MAAA,UAAAI,UAA6CD,GAAA,uBAAAH,MAAA,yBAA6DG,GAAA,qBAAAH,MAAA,uBAAyDG,GAAA,0BAAAH,MAAA,8BAAqEG,GAAA,gBAAAH,MAAA,4BAAAI,UAAqED,GAAA,kBAAAH,MAAA,oBAAmDG,GAAA,wBAAAH,MAAA,0BAA+DG,GAAA,iDAAAH,MAAA,oDAAkHG,GAAA,sBAAAH,MAAA,uDAA0FG,GAAA,sBAAAH,MAAA,wBAA2DG,GAAA,iDAAAH,MAAA,mDAAiHG,GAAA,kBAAAH,MAAA,oBAAmDG,GAAA,yBAAAH,MAAA,2BAAiEG,GAAA,6BAAAH,MAAA,+BAAyEG,GAAA,gCAAAH,MAAA,kCAA+EG,GAAA,6CAAAH,MAAA,iDAA2GG,GAAA,sBAAAH,MAAA,sBAAAI,UAAqED,GAAA,2BAAAH,MAAA,6BAAqEG,GAAA,kCAAAH,MAAA,oCAAmFG,GAAA,uBAAAH,MAAA,yBAA6DG,GAAA,8BAAAH,MAAA,kCAA6EG,GAAA,aAAAH,MAAA,aAAAI,UAAmDD,GAAA,0BAAAH,MAAA,4BAAmEG,GAAA,4BAAAH,MAAA,gCAAyEG,GAAA,aAAAH,MAAA,aAAAI,UAAmDD,GAAA,2BAAAH,MAAA,6BAAqEG,GAAA,wCAAAH,MAAA,4CAAiGG,GAAA,SAAAH,MAAA,mBAAAI,QAAA,OAA0DD,GAAA,iBAAAH,MAAA,iBAAAI,UAA2DD,GAAA,kCAAAH,MAAA,oCAAmFG,GAAA,+BAAAH,MAAA,gCAA4EG,GAAA,aAAAH,MAAA,aAAAI,UAAmDD,GAAA,mBAAAH,MAAA,qBAAqDG,GAAA,UAAAH,MAAA,mCAA0DG,GAAA,MAAAH,MAAA,uBAAAI,UAAsDD,GAAA,0CAAAH,MAAA,4CAAmGG,GAAA,iEAAAH,MAAA,mEAAiJG,GAAA,qBAAAH,MAAA,yBAA2DG,GAAA,WAAAH,MAAA,WAAAI,QAAA,OAAoDD,GAAA,UAAAH,MAAA,kBAAAI,UAAqDD,GAAA,uCAAAH,MAAA,yCAA6FG,GAAA,4BAAAH,MAAA,gCAAyEG,GAAA,cAAAH,MAAA,cAAAI,UAAqDD,GAAA,sDAAAH,MAAA,wDAA2HG,GAAA,8BAAAH,MAAA,gCAA2EG,GAAA,mBAAAH,MAAA,uBAAuDG,GAAA,+BAAAH,MAAA,mCAA+EG,GAAA,wBAAAH,MAAA,wBAAAI,UAAyED,GAAA,gBAAAH,MAAA,kBAA+CG,GAAA,0CAAAH,MAAA,4CAAmGG,GAAA,YAAAH,MAAA,uDAAAI,QAAA,OAAmGD,GAAA,wBAAAH,MAAA,8BAAAI,QAAA,OAAoFD,GAAA,2BAAAH,MAAA,gCAAAI,QAAA,OAAyFD,GAAA,iBAAAH,MAAA,4BAAAI,UAAsED,GAAA,wBAAAH,MAAA,0BAA+DG,GAAA,sBAAAH,MAAA,wBAA2DG,GAAA,mDAAAH,MAAA,yDAA2HG,GAAA,iBAAAH,MAAA,iCAAAI,QAAA,OAAgFD,GAAA,wBAAAH,MAAA,wBAAAI,UAAyED,GAAA,cAAAH,MAAA,gBAA2CG,GAAA,WAAAH,MAAA,kBAA0CD,MAAQC,MAAA,iCAAAC,KAAA,mBAAAC,QAA6EC,GAAA,QAAAH,MAAA,eAAAI,QAAA,OAAqDD,GAAA,kBAAAH,MAAA,kBAAAI,QAAA,OAAkED,GAAA,gBAAAH,MAAA,gBAAAI,QAAA,UAAiEL,MAAQC,MAAA,sBAAAC,KAAA,QAAAC,QAAuDC,GAAA,QAAAH,MAAA,eAAAI,UAAgDD,GAAA,WAAAH,MAAA,eAAuCG,GAAA,kBAAAH,MAAA,kBAAAI,UAA6DD,GAAA,eAAAH,MAAA,iBAA6CG,GAAA,qBAAAH,MAAA,uBAAyDG,GAAA,wBAAAH,MAAA,4BAAiEG,GAAA,yBAAAH,MAAA,yBAAAI,QAAA,OAAgFD,GAAA,oCAAAH,MAAA,oCAAAI,UAAiGD,GAAA,4CAAAH,MAAA,mDAA4GD,MAAQC,MAAA,iCAAAC,KAAA,mBAAAC,QAA6EC,GAAA,QAAAH,MAAA,eAAAI,UAAgDD,GAAA,WAAAH,MAAA,eAAuCG,GAAA,QAAAH,MAAA,kBAAAI,QAAA,OAAwDD,GAAA,QAAAH,MAAA,mBAAAI,QAAA,OAAyDD,GAAA,kBAAAH,MAAA,kBAAAI,QAAA,UAAqEL,MAAQC,MAAA,aAAAC,KAAA,aAAAC,QAAmDC,GAAA,QAAAH,MAAA,eAAAI,QAAA,OAAqDD,GAAA,SAAAH,MAAA,0CAAAI,QAAA,OAAiFD,GAAA,SAAAH,MAAA,iCAAAI,UAAmED,GAAA,WAAAH,MAAA,aAAqCG,GAAA,eAAAH,MAAA,sBAAkDD,MAAQC,MAAA,QAAAC,KAAA,QAAAC,QAAyCC,GAAA,aAAAH,MAAA,2BAAAI,QAAA,OAAsED,GAAA,kBAAAH,MAAA,kBAAAI,QAAA,OAAkED,GAAA,sBAAAH,MAAA,sBAAAI,QAAA,OAA0ED,GAAA,UAAAH,MAAA,8BAAAI,QAAA,YAA0EC,aAAgBJ,KAAA,0BAAAK,SAA4CL,KAAA,0BAAAD,MAAA,iDAAyFO,MAASN,KAAA,oBAAAD,MAAA,UAAAQ,SAAA,qBAA4EC,MAASR,KAAA,gCAAAD,MAAA,sBAAAQ,SAAA","file":"path---docs-core-serialization-51a343bdbae26de82387.js","sourcesContent":["webpackJsonp([101494339953172],{\n\n/***/ 408:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"html\":\"<h1 id=\\\"the-serialization-process\\\"><a href=\\\"#the-serialization-process\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The Serialization Process</h1>\\n<h2 id=\\\"overall-process\\\"><a href=\\\"#overall-process\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overall Process</h2>\\n<p>API Platform embraces and extends the Symfony Serializer Component to transform PHP entities in (hypermedia) API responses.</p>\\n<p>The main serialization process has two stages:</p>\\n<p></p>\\n<blockquote>\\n<p>As you can see in the picture above, an array is used as a man in the middle. This way, Encoders will only deal with turning specific formats into arrays and vice versa. The same way, Normalizers will deal with turning specific objects into arrays and vice versa.\\n-- <a href=\\\"https://symfony.com/doc/current/components/serializer.html\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">The Symfony documentation</a></p>\\n</blockquote>\\n<p>Unlike Symfony itself, API Platform leverages custom normalizers, its router and the <a href=\\\"/docs/core/data-providers\\\">data provider</a> system to do an advanced tranformation. Metadata are added to the generated document including links, type information, pagination data or available filters.</p>\\n<p>The API Platform Serializer is very extensible, you can register custom normalizers and encoders to support other formats. You can also decorate existing normalizers to customize their behaviors.</p>\\n<h2 id=\\\"available-serializers\\\"><a href=\\\"#available-serializers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Available Serializers</h2>\\n<ul>\\n<li><a href=\\\"https://json-ld.org\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">JSON-LD</a> serializer\\n<code>api_platform.jsonld.normalizer.item</code></li>\\n</ul>\\n<p>JSON-LD, or JavaScript Object Notation for Linked Data, is a method of encoding Linked Data using JSON. It is a World Wide Web Consortium Recommendation.</p>\\n<ul>\\n<li>\\n<p><a href=\\\"https://en.wikipedia.org/wiki/Hypertext_Application_Language\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">HAL</a> serializer\\n<code>api_platform.hal.normalizer.item</code></p>\\n</li>\\n<li>\\n<p>JSON, XML, CSV, YAML serializer (using the Symfony serializer)\\n<code>api_platform.serializer.normalizer.item</code></p>\\n</li>\\n</ul>\\n<h2 id=\\\"the-serialization-context-groups-and-relations\\\"><a href=\\\"#the-serialization-context-groups-and-relations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The Serialization Context, Groups and Relations</h2>\\n<p>API Platform allows to specify the <code>$context</code> parameter used by the Symfony Serializer. This context has a handy\\n<code>groups</code> key allowing to choose which attributes of the resource are exposed during the normalization (read) and denormalization\\n(write) process.\\nIt relies on the <a href=\\\"https://symfony.com/doc/current/components/serializer.html#attributes-groups\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">serialization (and deserialization) groups</a>\\nfeature of the Symfony Serializer component.</p>\\n<p>In addition to groups, you can use any option supported by the Symfony Serializer such as <a href=\\\"https://symfony.com/doc/current/components/serializer.html#handling-serialization-depth\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\"><code>enable_max_depth</code></a>\\nto limit the serialization depth.</p>\\n<h3 id=\\\"configuration\\\"><a href=\\\"#configuration\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Configuration</h3>\\n<p>Just like other Symfony and API Platform components, the Serializer can be configured using annotations, XML and YAML.\\nAs annotations are easy to understand and allow to group code and configuration, we will use them in the following examples.</p>\\n<p>However, if you don't use the official distribution of API Platform, don't forget to enable annotation support in the serializer\\nconfiguration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/config.yml</span>\\n<span class=\\\"token key atrule\\\">framework</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">serializer</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token key atrule\\\">enable_annotations</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean important\\\">true </span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>If you use <a href=\\\"https://github.com/symfony/flex\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Symfony Flex</a>, just execute <code>composer req doctrine/annotations</code> and you are\\nall set!</p>\\n<h2 id=\\\"using-serialization-groups\\\"><a href=\\\"#using-serialization-groups\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using Serialization Groups</h2>\\n<p>It is really simple to specify what groups to use in the API system:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"normalization_context\\\"={\\\"groups\\\"={\\\"read\\\"}},\\n *     \\\"denormalization_context\\\"={\\\"groups\\\"={\\\"write\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"read\\\", \\\"write\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups(\\\"write\\\")\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$author</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>With the config of the previous example, the <code>name</code> property will be accessible in read and write, but the <code>author</code> property\\nwill be write only, therefore the <code>author</code> property will never be included in documents returned by the API.</p>\\n<p>The value of the <code>normalization_context</code> is passed to the Symfony Serializer during the normalization process. In the same\\nway, <code>denormalization_context</code> is used for denormalization.\\nYou can configure groups as well as any Symfony Serializer option configurable through the context argument (e.g. the <code>enable_max_depth</code>\\nkey when using <a href=\\\"https://github.com/symfony/symfony/issues/17113\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">the <code>@MaxDepth</code> annotation</a>).</p>\\n<p>Built-in actions and the Hydra documentation generator will leverage the specified serialization and deserialization groups\\nto give access only to exposed properties and to guess if they are readable and/or writable.</p>\\n<h2 id=\\\"using-different-serialization-groups-per-operation\\\"><a href=\\\"#using-different-serialization-groups-per-operation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using Different Serialization Groups per Operation</h2>\\n<p>It is possible to specify normalization and denormalization contexts (as well as any other attribute) on a per operation\\nbasis. API Platform will always use the most specific definition. For instance if normalization groups are set both\\nat the resource level and at the operation level, the configuration set at the operation level will be used and the resource\\nlevel ignored.</p>\\n<p>In the following example we use different serialization groups for the <code>GET</code> and <code>PUT</code> operations:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(\\n *     attributes={\\n *         \\\"normalization_context\\\"={\\\"groups\\\"={\\\"get\\\"}}\\n *     },\\n *     itemOperations={\\n *          \\\"get\\\"={\\\"method\\\"=\\\"GET\\\"},\\n *          \\\"put\\\"={\\\"method\\\"=\\\"PUT\\\", \\\"normalization_context\\\"={\\\"groups\\\"={\\\"put\\\"}}}\\n *     }\\n * )\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"get\\\", \\\"put\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups(\\\"get\\\")\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$author</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><code>name</code> and <code>author</code> properties will be included in the document generated during a <code>GET</code> operation because the configuration\\ndefined at the resource level is inherited. However the document generated when a <code>PUT</code> request will be received will only\\ninclude the <code>name</code> property because of the specific configuration for this operation.</p>\\n<p>Refer to the documentation of <a href=\\\"/docs/core/operations\\\">operations</a> to learn more about the concept of operations.</p>\\n<h3 id=\\\"embedding-relations\\\"><a href=\\\"#embedding-relations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Embedding Relations</h3>\\n<p>By default, the serializer provided with API Platform represents relations between objects by <a href=\\\"https://en.wikipedia.org/wiki/Internationalized_Resource_Identifier\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">dereferenceables IRIs</a>.\\nThey allow to retrieve details of related objects by issuing an extra HTTP request.</p>\\n<p>In the following JSON document, the relation from a book to an author is represented by an URI:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/contexts/Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"normalization\\\"><a href=\\\"#normalization\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Normalization</h3>\\n<p>To improve the application's performance, it is sometimes necessary to avoid issuing extra HTTP requests. It is possible\\nto embed related objects (or only some of their properties) directly in the parent response through serialization groups.\\nBy using the following serialization groups annotations (<code>@Groups</code>), a JSON representation of the author is embedded in\\nthe book response:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"normalization_context\\\"={\\\"groups\\\"={\\\"book\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"book\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"book\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$author</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Person.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * ...\\n     * @Groups(\\\"book\\\")\\n     */</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>The generated JSON with previous settings will be like the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/contexts/Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Person\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Kévin Dunglas\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>In order to optimize such embedded relations, the default Doctrine data provider will automatically join entities on relations\\nmarked as <a href=\\\"http://doctrine-orm.readthedocs.io/projects/doctrine-orm/en/latest/reference/annotations-reference.html#manytoone\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\"><code>EAGER</code></a>\\navoiding extra queries to be executed when serializing the sub-objects.</p>\\n<h3 id=\\\"denormalization\\\"><a href=\\\"#denormalization\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Denormalization</h3>\\n<p>It is also possible to embed a relation in <code>PUT</code> and <code>POST</code> requests. To enable that feature, the serialization groups must be\\nset the same way as normalization and the configuration should be like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"denormalization_context\\\"={\\\"groups\\\"={\\\"book\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>The following rules apply when denormalizating embedded relations:</p>\\n<ul>\\n<li>If a <code>@id</code> key is present in the embedded resource, the object corresponding to the given URI will be retrieved through\\nthe data provider and any changes in the embedded relation will be applied to that object.</li>\\n<li>If no <code>@id</code> key exists, a new object will be created containing data provided in the embedded JSON document.</li>\\n</ul>\\n<p>You can create as relation embedding levels as you want.</p>\\n<h2 id=\\\"changing-the-serialization-context-dynamically\\\"><a href=\\\"#changing-the-serialization-context-dynamically\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Changing the Serialization Context Dynamically</h2>\\n<p>Let's imagine a resource where most fields can be managed by any user, but some can be managed by admin users only:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"normalization_context\\\"={\\\"groups\\\"={\\\"book_output\\\"}},\\n *     \\\"denormalization_context\\\"={\\\"groups\\\"={\\\"book_input\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * This field can be managed by an admin only\\n     *\\n     * @var bool\\n     *\\n     * @Groups({\\\"book_output\\\", \\\"admin_input\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$active</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * This field can be managed by any user\\n     *\\n     * @var string\\n     *\\n     * @Groups({\\\"book_output\\\", \\\"book_input\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>All entry points are the same for all users, so we should find a way to detect if authenticated user is admin, and if so\\ndynamically add <code>admin_input</code> to deserialization groups.</p>\\n<p>API Platform implements a <code>ContextBuilder</code>, which prepares the context for serialization &#x26; deserialization. Let's\\n<a href=\\\"http://symfony.com/doc/current/service_container/service_decoration.html\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">decorate this service</a> to override the\\n<code>createFromRequest</code> method:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/services.yml</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">'AppBundle\\\\Serializer\\\\BookContextBuilder'</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token key atrule\\\">decorates</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'api_platform.serializer.context_builder'</span>\\n        <span class=\\\"token key atrule\\\">arguments</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">'@AppBundle\\\\Serializer\\\\BookContextBuilder.inner'</span> <span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token key atrule\\\">autoconfigure</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean important\\\">false</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Serializer/BookContextBuilder.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Serializer</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>SerializerContextBuilderInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpFoundation<span class=\\\"token punctuation\\\">\\\\</span>Request</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Security<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Authorization<span class=\\\"token punctuation\\\">\\\\</span>AuthorizationCheckerInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity<span class=\\\"token punctuation\\\">\\\\</span>Book</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">BookContextBuilder</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">SerializerContextBuilderInterface</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$authorizationChecker</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__construct</span><span class=\\\"token punctuation\\\">(</span>SerializerContextBuilderInterface <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">,</span> AuthorizationCheckerInterface <span class=\\\"token variable\\\">$authorizationChecker</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">authorizationChecker</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$authorizationChecker</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">createFromRequest</span><span class=\\\"token punctuation\\\">(</span>Request <span class=\\\"token variable\\\">$request</span><span class=\\\"token punctuation\\\">,</span> bool <span class=\\\"token variable\\\">$normalization</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">array</span> <span class=\\\"token variable\\\">$extractedAttributes</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">array</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$context</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">createFromRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$request</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$normalization</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$extractedAttributes</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token variable\\\">$subject</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$request</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">attributes</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$subject</span> <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Book</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">isset</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'groups'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">authorizationChecker</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">isGranted</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'ROLE_ADMIN'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token variable\\\">$normalization</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'groups'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'admin_input'</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>If the user has <code>ROLE_ADMIN</code> permission and the subject is an instance of Book, <code>admin_input</code> group will be dynamically added to the denormalization context.\\nThe variable <code>$normalization</code> lets you check whether the context is for normalization (if true) or denormalization.</p>\\n<h2 id=\\\"name-conversion\\\"><a href=\\\"#name-conversion\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Name Conversion</h2>\\n<p>The Serializer Component provides a handy way to map PHP field names to serialized names. See the related <a href=\\\"http://symfony.com/doc/master/components/serializer.html#converting-property-names-when-serializing-and-deserializing\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Symfony documentation</a>.</p>\\n<p>To use this feature, declare a new service with id <code>app.name_converter</code>. For example, you can convert <code>CamelCase</code> to\\n<code>snake_case</code> with the following configuration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/services.yml</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">'Symfony\\\\Component\\\\Serializer\\\\NameConverter\\\\CamelCaseToSnakeCaseNameConverter'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token null important\\\">~</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/config.yml</span>\\n<span class=\\\"token key atrule\\\">api_platform</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">name_converter</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Symfony\\\\Component\\\\Serializer\\\\NameConverter\\\\CamelCaseToSnakeCaseNameConverter'</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"decorating-a-serializer-and-add-extra-data\\\"><a href=\\\"#decorating-a-serializer-and-add-extra-data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Decorating a Serializer and Add Extra Data</h2>\\n<p>In the following example, we will see how we add extra informations to the output.\\nHere is how we add the date on each request in <code>GET</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/services.yml</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">'AppBundle\\\\Serializer\\\\ApiNormalizer'</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token key atrule\\\">decorates</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'api_platform.jsonld.normalizer.item'</span>\\n        <span class=\\\"token key atrule\\\">arguments</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">'@AppBundle\\\\Serializer\\\\ApiNormalizer.inner'</span> <span class=\\\"token punctuation\\\">]</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/Appbundle/Serializer/ApiNormalizer</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Serializer</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Normalizer<span class=\\\"token punctuation\\\">\\\\</span>DenormalizerInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Normalizer<span class=\\\"token punctuation\\\">\\\\</span>NormalizerInterface</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ApiNormalizer</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">NormalizerInterface</span><span class=\\\"token punctuation\\\">,</span> DenormalizerInterface\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__construct</span><span class=\\\"token punctuation\\\">(</span>NormalizerInterface <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token variable\\\">$decorated</span> <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">DenormalizerInterface</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\"><span class=\\\"token punctuation\\\">\\\\</span>InvalidArgumentException</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">sprintf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'The decorated normalizer must implement the %s.'</span><span class=\\\"token punctuation\\\">,</span> DenormalizerInterface<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">supportsNormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">supportsNormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$object</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">array</span> <span class=\\\"token variable\\\">$context</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$data</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$object</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">is_array</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'date'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">date</span><span class=\\\"token punctuation\\\">(</span>\\\\<span class=\\\"token package\\\">DateTime</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">RFC3339</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">supportsDenormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$type</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">supportsDenormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$type</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">denormalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$class</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">array</span> <span class=\\\"token variable\\\">$context</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">denormalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$class</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"entity-identifier-case\\\"><a href=\\\"#entity-identifier-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Entity Identifier Case</h2>\\n<p>API Platform is able to guess the entity identifier using <a href=\\\"http://doctrine-orm.readthedocs.org/en/latest/reference/basic-mapping.html#identifiers-primary-keys\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Doctrine metadata</a>.\\nIt also supports composite identifiers.</p>\\n<p>If Doctrine ORM is not used, the identifier must be marked explicitly using the <code>identifier</code> attribute of the <code>ApiPlatform\\\\Core\\\\Annotation\\\\ApiProperty</code>\\nannotation.</p>\\n<p>In some cases, you will want to set the identifier of a resource from the client (e.g. a client-side generated UUID, or a slug).\\nIn this case the identifier property must become a writable class property.</p>\\n<p>To do this you simply have to:</p>\\n<ul>\\n<li>Create a setter for the identifier of the entity or make it a <code>public</code> property</li>\\n<li>Add the denormalization group to the property if you use a specific denormalization group</li>\\n<li>If you use Doctrine ORM, be sure to <strong>not</strong> mark this property with <a href=\\\"http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/basic-mapping.html#identifier-generation-strategies\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">the <code>@GeneratedValue</code> annotation</a>\\nor use the <code>NONE</code> value</li>\\n</ul>\\n<h2 id=\\\"embedding-the-json-ld-context\\\"><a href=\\\"#embedding-the-json-ld-context\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Embedding the JSON-LD Context</h2>\\n<p>By default, the generated <a href=\\\"https://www.w3.org/TR/json-ld/#the-context\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">JSON-LD context</a> (<code>@context</code>) is only reference by\\nan IRI. A client supporting JSON-LD must send a second HTTP request to retrieve it:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/contexts/Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>You can configure API Platform to embed the JSON-LD context in the root document like the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"@vocab\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://localhost:8000/apidoc#\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"hydra\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://www.w3.org/ns/hydra/core#\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://schema.org/name\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://schema.org/author\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>To do so, use the following configuration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(\\n *     attributes={\\\"normalization_context\\\"={\\\"jsonld_embed_context\\\"=true}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\"},\"navDoc\":{\"edges\":[{\"node\":{\"title\":\"The Distribution\",\"path\":\"distribution\",\"items\":[{\"id\":\"index\",\"title\":\"Creating a Fully Featured API in 5 Minutes\",\"anchors\":null},{\"id\":\"testing\",\"title\":\"Testing and Specifying the API\",\"anchors\":null}]}},{\"node\":{\"title\":\"The API Component\",\"path\":\"core\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installing-api-platform-core\",\"title\":\"Installing API Platform Core\"},{\"id\":\"before-reading-this-documentation\",\"title\":\"Before Reading this Documentation\"},{\"id\":\"mapping-the-entities\",\"title\":\"Mapping the Entities\"}]},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null},{\"id\":\"operations\",\"title\":\"Operations\",\"anchors\":[{\"id\":\"enabling-and-disabling-operations\",\"title\":\"Enabling and Disabling Operations\"},{\"id\":\"configuring-operations\",\"title\":\"Configuring Operations\"},{\"id\":\"subresources\",\"title\":\"Subresources\"},{\"id\":\"creating-custom-operations-and-controllers\",\"title\":\"Creating Custom Operations and Controllers\"}]},{\"id\":\"default-order\",\"title\":\"Overriding Default Order\",\"anchors\":null},{\"id\":\"filters\",\"title\":\"Filters\",\"anchors\":[{\"id\":\"doctrine-orm-filters\",\"title\":\"Doctrine ORM Filters\"},{\"id\":\"serializer-filters\",\"title\":\"Serializer Filters\"},{\"id\":\"creating-custom-filters\",\"title\":\"Creating Custom Filters\"}]},{\"id\":\"serialization\",\"title\":\"The Serialization Process\",\"anchors\":[{\"id\":\"overall-process\",\"title\":\"Overall Process\"},{\"id\":\"available-serializers\",\"title\":\"Available Serializers\"},{\"id\":\"the-serialization-context-groups-and-relations\",\"title\":\"The Serialization Context, Groups and Relations\"},{\"id\":\"embedding-relations\",\"title\":\"Using Different Serialization Groups per Operation\"},{\"id\":\"embedding-relations\",\"title\":\"Embedding Relations\"},{\"id\":\"changing-the-serialization-context-dynamically\",\"title\":\"Changing the Serialization Context Dynamically\"},{\"id\":\"name-conversion\",\"title\":\"Name Conversion\"},{\"id\":\"entity-identifier-case\",\"title\":\"Entity Identifier Case\"},{\"id\":\"writable-entity-identifier\",\"title\":\"Writable Entity Identifier\"},{\"id\":\"embedding-the-json-ld-context\",\"title\":\"Embedding the JSON-LD Context\"},{\"id\":\"decorating-a-serializer-and-add-extra-data\",\"title\":\"Decorating a Serializer and Add Extra Data\"}]},{\"id\":\"content-negotiation\",\"title\":\"Content Negotiation\",\"anchors\":[{\"id\":\"enabling-several-formats\",\"title\":\"Enabling Several Formats\"},{\"id\":\"registering-a-custom-serializer\",\"title\":\"Registering a Custom Serializer\"},{\"id\":\"creating-a-responder\",\"title\":\"Creating a Responder\"},{\"id\":\"writing-a-custom-normalizer\",\"title\":\"Writing a Custom Normalizer\"}]},{\"id\":\"validation\",\"title\":\"Validation\",\"anchors\":[{\"id\":\"using-validation-groups\",\"title\":\"Using Validation Groups\"},{\"id\":\"dynamic-validation-groups\",\"title\":\"Dynamic Validation Groups\"}]},{\"id\":\"pagination\",\"title\":\"Pagination\",\"anchors\":[{\"id\":\"disabling-the-pagination\",\"title\":\"Disabling the Pagination\"},{\"id\":\"changing-the-number-of-items-per-page\",\"title\":\"Changing the Number of Items per Page\"}]},{\"id\":\"events\",\"title\":\"The Event System\",\"anchors\":null},{\"id\":\"data-providers\",\"title\":\"Data Providers\",\"anchors\":[{\"id\":\"creating-a-custom-data-provider\",\"title\":\"Custom Collection Data Provider\"},{\"id\":\"returning-a-paged-collection\",\"title\":\"Custom Item Data Provider\"}]},{\"id\":\"extensions\",\"title\":\"Extensions\",\"anchors\":[{\"id\":\"custom-extension\",\"title\":\"Custom Extension\"},{\"id\":\"example\",\"title\":\"Filter upon the current user\"}]},{\"id\":\"jwt\",\"title\":\"JWT Authentification\",\"anchors\":[{\"id\":\"installing-lexikjwtauthenticationnundle\",\"title\":\"Installing LexikJWTAuthenticationBundle\"},{\"id\":\"documenting-the-authentication-mechanism-with-swagger-open-api\",\"title\":\"Documenting the Authentication Mechanism with Swagger/Open API\"},{\"id\":\"testing-with-behat\",\"title\":\"Testing with Behat\"}]},{\"id\":\"security\",\"title\":\"Security\",\"anchors\":null},{\"id\":\"swagger\",\"title\":\"Swagger Support\",\"anchors\":[{\"id\":\"overriding-the-swagger-documentation\",\"title\":\"Overriding the Swagger documentation\"},{\"id\":\"using-the-swagger-context\",\"title\":\"Using the Swagger Context\"}]},{\"id\":\"performance\",\"title\":\"Performance\",\"anchors\":[{\"id\":\"enabling-the-builtin-http-cache-invalidation-system\",\"title\":\"Enabling the Builtin HTTP Cache Invalidation System\"},{\"id\":\"enabling-the-metadata-cache\",\"title\":\"Enabling the Metadata Cache\"},{\"id\":\"using-ppm-php-pm\",\"title\":\"Using PPM (PHP-PM)\"},{\"id\":\"doctrine-queries-and-indexes\",\"title\":\"Doctrine Queries and Indexes\"}]},{\"id\":\"operation-path-naming\",\"title\":\"Operation Path Naming\",\"anchors\":[{\"id\":\"configuration\",\"title\":\"Configuration\"},{\"id\":\"create-a-custom-operation-path-resolver\",\"title\":\"Create a Custom Operation Path Naming\"}]},{\"id\":\"form-data\",\"title\":\"Accept \\\"application/x-www-form-urlencoded\\\" Form Data\",\"anchors\":null},{\"id\":\"external-vocabularies\",\"title\":\"Using External Vocabularies\",\"anchors\":null},{\"id\":\"extending-jsonld-context\",\"title\":\"Extending the JSON-LD context\",\"anchors\":null},{\"id\":\"fosuser-bundle\",\"title\":\"FOSUserBundle Integration\",\"anchors\":[{\"id\":\"installing-the-bundle\",\"title\":\"Installing the Bundle\"},{\"id\":\"enabling-the-bridge\",\"title\":\"Enabling the Bridge\"},{\"id\":\"creating-a-user-entity-with-serialization-groups\",\"title\":\"Creating a \\\"User\\\" Entity with Serialization Groups\"}]},{\"id\":\"nelmio-api-doc\",\"title\":\"NelmioApiDocBundle integration\",\"anchors\":null},{\"id\":\"angularjs-integration\",\"title\":\"AngularJS Integration\",\"anchors\":[{\"id\":\"restangular\",\"title\":\"Restangular\"},{\"id\":\"ng-admin\",\"title\":\"ng-admin\"}]}]}},{\"node\":{\"title\":\"The Schema Generator Component\",\"path\":\"schema-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":null},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null}]}},{\"node\":{\"title\":\"The Admin Component\",\"path\":\"admin\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installation\",\"title\":\"Installation\"},{\"id\":\"creating-the-admin\",\"title\":\"Creating the Admin\"},{\"id\":\"customizing-the-admin\",\"title\":\"Customizing the Admin\"}]},{\"id\":\"authentication-support\",\"title\":\"Authentication Support\",\"anchors\":null},{\"id\":\"handling-relations-to-collections\",\"title\":\"Handling Relations to Collections\",\"anchors\":[{\"id\":\"using-an-autocomplete-input-for-relations\",\"title\":\"Using an Autocomplete Input for Relations\"}]}]}},{\"node\":{\"title\":\"The Client Generator Component\",\"path\":\"client-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"react\",\"title\":\"React generator\",\"anchors\":null},{\"id\":\"vuejs\",\"title\":\"Vue.js generator\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null}]}},{\"node\":{\"title\":\"Deployment\",\"path\":\"deployment\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"heroku\",\"title\":\"Deploying an API Platform App on Heroku\",\"anchors\":null},{\"id\":\"docker\",\"title\":\"Using API Platform with Docker\",\"anchors\":[{\"id\":\"services\",\"title\":\"Services\"},{\"id\":\"installation\",\"title\":\"Installation\"}]}]}},{\"node\":{\"title\":\"Extra\",\"path\":\"extra\",\"items\":[{\"id\":\"philosophy\",\"title\":\"The Project's Philosophy\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null},{\"id\":\"contribution-guides\",\"title\":\"Contribution Guides\",\"anchors\":null},{\"id\":\"conduct\",\"title\":\"Contributor Code Of Conduct\",\"anchors\":null}]}}]}},\"pathContext\":{\"path\":\"docs/core/serialization\",\"current\":{\"path\":\"docs/core/serialization\",\"title\":\"The API Component - The Serialization Process\"},\"prev\":{\"path\":\"docs/core/filters\",\"title\":\"Filters\",\"rootPath\":\"The API Component\"},\"next\":{\"path\":\"docs/core/content-negotiation\",\"title\":\"Content Negotiation\",\"rootPath\":\"The API Component\"}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-core-serialization-51a343bdbae26de82387.js","module.exports = {\"data\":{\"post\":{\"html\":\"<h1 id=\\\"the-serialization-process\\\"><a href=\\\"#the-serialization-process\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The Serialization Process</h1>\\n<h2 id=\\\"overall-process\\\"><a href=\\\"#overall-process\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overall Process</h2>\\n<p>API Platform embraces and extends the Symfony Serializer Component to transform PHP entities in (hypermedia) API responses.</p>\\n<p>The main serialization process has two stages:</p>\\n<p></p>\\n<blockquote>\\n<p>As you can see in the picture above, an array is used as a man in the middle. This way, Encoders will only deal with turning specific formats into arrays and vice versa. The same way, Normalizers will deal with turning specific objects into arrays and vice versa.\\n-- <a href=\\\"https://symfony.com/doc/current/components/serializer.html\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">The Symfony documentation</a></p>\\n</blockquote>\\n<p>Unlike Symfony itself, API Platform leverages custom normalizers, its router and the <a href=\\\"/docs/core/data-providers\\\">data provider</a> system to do an advanced tranformation. Metadata are added to the generated document including links, type information, pagination data or available filters.</p>\\n<p>The API Platform Serializer is very extensible, you can register custom normalizers and encoders to support other formats. You can also decorate existing normalizers to customize their behaviors.</p>\\n<h2 id=\\\"available-serializers\\\"><a href=\\\"#available-serializers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Available Serializers</h2>\\n<ul>\\n<li><a href=\\\"https://json-ld.org\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">JSON-LD</a> serializer\\n<code>api_platform.jsonld.normalizer.item</code></li>\\n</ul>\\n<p>JSON-LD, or JavaScript Object Notation for Linked Data, is a method of encoding Linked Data using JSON. It is a World Wide Web Consortium Recommendation.</p>\\n<ul>\\n<li>\\n<p><a href=\\\"https://en.wikipedia.org/wiki/Hypertext_Application_Language\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">HAL</a> serializer\\n<code>api_platform.hal.normalizer.item</code></p>\\n</li>\\n<li>\\n<p>JSON, XML, CSV, YAML serializer (using the Symfony serializer)\\n<code>api_platform.serializer.normalizer.item</code></p>\\n</li>\\n</ul>\\n<h2 id=\\\"the-serialization-context-groups-and-relations\\\"><a href=\\\"#the-serialization-context-groups-and-relations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The Serialization Context, Groups and Relations</h2>\\n<p>API Platform allows to specify the <code>$context</code> parameter used by the Symfony Serializer. This context has a handy\\n<code>groups</code> key allowing to choose which attributes of the resource are exposed during the normalization (read) and denormalization\\n(write) process.\\nIt relies on the <a href=\\\"https://symfony.com/doc/current/components/serializer.html#attributes-groups\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">serialization (and deserialization) groups</a>\\nfeature of the Symfony Serializer component.</p>\\n<p>In addition to groups, you can use any option supported by the Symfony Serializer such as <a href=\\\"https://symfony.com/doc/current/components/serializer.html#handling-serialization-depth\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\"><code>enable_max_depth</code></a>\\nto limit the serialization depth.</p>\\n<h3 id=\\\"configuration\\\"><a href=\\\"#configuration\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Configuration</h3>\\n<p>Just like other Symfony and API Platform components, the Serializer can be configured using annotations, XML and YAML.\\nAs annotations are easy to understand and allow to group code and configuration, we will use them in the following examples.</p>\\n<p>However, if you don't use the official distribution of API Platform, don't forget to enable annotation support in the serializer\\nconfiguration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/config.yml</span>\\n<span class=\\\"token key atrule\\\">framework</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">serializer</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token key atrule\\\">enable_annotations</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean important\\\">true </span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>If you use <a href=\\\"https://github.com/symfony/flex\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Symfony Flex</a>, just execute <code>composer req doctrine/annotations</code> and you are\\nall set!</p>\\n<h2 id=\\\"using-serialization-groups\\\"><a href=\\\"#using-serialization-groups\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using Serialization Groups</h2>\\n<p>It is really simple to specify what groups to use in the API system:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"normalization_context\\\"={\\\"groups\\\"={\\\"read\\\"}},\\n *     \\\"denormalization_context\\\"={\\\"groups\\\"={\\\"write\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"read\\\", \\\"write\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups(\\\"write\\\")\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$author</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>With the config of the previous example, the <code>name</code> property will be accessible in read and write, but the <code>author</code> property\\nwill be write only, therefore the <code>author</code> property will never be included in documents returned by the API.</p>\\n<p>The value of the <code>normalization_context</code> is passed to the Symfony Serializer during the normalization process. In the same\\nway, <code>denormalization_context</code> is used for denormalization.\\nYou can configure groups as well as any Symfony Serializer option configurable through the context argument (e.g. the <code>enable_max_depth</code>\\nkey when using <a href=\\\"https://github.com/symfony/symfony/issues/17113\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">the <code>@MaxDepth</code> annotation</a>).</p>\\n<p>Built-in actions and the Hydra documentation generator will leverage the specified serialization and deserialization groups\\nto give access only to exposed properties and to guess if they are readable and/or writable.</p>\\n<h2 id=\\\"using-different-serialization-groups-per-operation\\\"><a href=\\\"#using-different-serialization-groups-per-operation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using Different Serialization Groups per Operation</h2>\\n<p>It is possible to specify normalization and denormalization contexts (as well as any other attribute) on a per operation\\nbasis. API Platform will always use the most specific definition. For instance if normalization groups are set both\\nat the resource level and at the operation level, the configuration set at the operation level will be used and the resource\\nlevel ignored.</p>\\n<p>In the following example we use different serialization groups for the <code>GET</code> and <code>PUT</code> operations:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(\\n *     attributes={\\n *         \\\"normalization_context\\\"={\\\"groups\\\"={\\\"get\\\"}}\\n *     },\\n *     itemOperations={\\n *          \\\"get\\\"={\\\"method\\\"=\\\"GET\\\"},\\n *          \\\"put\\\"={\\\"method\\\"=\\\"PUT\\\", \\\"normalization_context\\\"={\\\"groups\\\"={\\\"put\\\"}}}\\n *     }\\n * )\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"get\\\", \\\"put\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups(\\\"get\\\")\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$author</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><code>name</code> and <code>author</code> properties will be included in the document generated during a <code>GET</code> operation because the configuration\\ndefined at the resource level is inherited. However the document generated when a <code>PUT</code> request will be received will only\\ninclude the <code>name</code> property because of the specific configuration for this operation.</p>\\n<p>Refer to the documentation of <a href=\\\"/docs/core/operations\\\">operations</a> to learn more about the concept of operations.</p>\\n<h3 id=\\\"embedding-relations\\\"><a href=\\\"#embedding-relations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Embedding Relations</h3>\\n<p>By default, the serializer provided with API Platform represents relations between objects by <a href=\\\"https://en.wikipedia.org/wiki/Internationalized_Resource_Identifier\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">dereferenceables IRIs</a>.\\nThey allow to retrieve details of related objects by issuing an extra HTTP request.</p>\\n<p>In the following JSON document, the relation from a book to an author is represented by an URI:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/contexts/Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"normalization\\\"><a href=\\\"#normalization\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Normalization</h3>\\n<p>To improve the application's performance, it is sometimes necessary to avoid issuing extra HTTP requests. It is possible\\nto embed related objects (or only some of their properties) directly in the parent response through serialization groups.\\nBy using the following serialization groups annotations (<code>@Groups</code>), a JSON representation of the author is embedded in\\nthe book response:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"normalization_context\\\"={\\\"groups\\\"={\\\"book\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"book\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * @Groups({\\\"book\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$author</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Person.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/**\\n     * ...\\n     * @Groups(\\\"book\\\")\\n     */</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>The generated JSON with previous settings will be like the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/contexts/Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Person\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Kévin Dunglas\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>In order to optimize such embedded relations, the default Doctrine data provider will automatically join entities on relations\\nmarked as <a href=\\\"http://doctrine-orm.readthedocs.io/projects/doctrine-orm/en/latest/reference/annotations-reference.html#manytoone\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\"><code>EAGER</code></a>\\navoiding extra queries to be executed when serializing the sub-objects.</p>\\n<h3 id=\\\"denormalization\\\"><a href=\\\"#denormalization\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Denormalization</h3>\\n<p>It is also possible to embed a relation in <code>PUT</code> and <code>POST</code> requests. To enable that feature, the serialization groups must be\\nset the same way as normalization and the configuration should be like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"denormalization_context\\\"={\\\"groups\\\"={\\\"book\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>The following rules apply when denormalizating embedded relations:</p>\\n<ul>\\n<li>If a <code>@id</code> key is present in the embedded resource, the object corresponding to the given URI will be retrieved through\\nthe data provider and any changes in the embedded relation will be applied to that object.</li>\\n<li>If no <code>@id</code> key exists, a new object will be created containing data provided in the embedded JSON document.</li>\\n</ul>\\n<p>You can create as relation embedding levels as you want.</p>\\n<h2 id=\\\"changing-the-serialization-context-dynamically\\\"><a href=\\\"#changing-the-serialization-context-dynamically\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Changing the Serialization Context Dynamically</h2>\\n<p>Let's imagine a resource where most fields can be managed by any user, but some can be managed by admin users only:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>Groups</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(attributes={\\n *     \\\"normalization_context\\\"={\\\"groups\\\"={\\\"book_output\\\"}},\\n *     \\\"denormalization_context\\\"={\\\"groups\\\"={\\\"book_input\\\"}}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * This field can be managed by an admin only\\n     *\\n     * @var bool\\n     *\\n     * @Groups({\\\"book_output\\\", \\\"admin_input\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$active</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/**\\n     * This field can be managed by any user\\n     *\\n     * @var string\\n     *\\n     * @Groups({\\\"book_output\\\", \\\"book_input\\\"})\\n     */</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$name</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>All entry points are the same for all users, so we should find a way to detect if authenticated user is admin, and if so\\ndynamically add <code>admin_input</code> to deserialization groups.</p>\\n<p>API Platform implements a <code>ContextBuilder</code>, which prepares the context for serialization &#x26; deserialization. Let's\\n<a href=\\\"http://symfony.com/doc/current/service_container/service_decoration.html\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">decorate this service</a> to override the\\n<code>createFromRequest</code> method:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/services.yml</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">'AppBundle\\\\Serializer\\\\BookContextBuilder'</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token key atrule\\\">decorates</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'api_platform.serializer.context_builder'</span>\\n        <span class=\\\"token key atrule\\\">arguments</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">'@AppBundle\\\\Serializer\\\\BookContextBuilder.inner'</span> <span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token key atrule\\\">autoconfigure</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean important\\\">false</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Serializer/BookContextBuilder.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Serializer</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>SerializerContextBuilderInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpFoundation<span class=\\\"token punctuation\\\">\\\\</span>Request</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Security<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Authorization<span class=\\\"token punctuation\\\">\\\\</span>AuthorizationCheckerInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity<span class=\\\"token punctuation\\\">\\\\</span>Book</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">BookContextBuilder</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">SerializerContextBuilderInterface</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$authorizationChecker</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__construct</span><span class=\\\"token punctuation\\\">(</span>SerializerContextBuilderInterface <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">,</span> AuthorizationCheckerInterface <span class=\\\"token variable\\\">$authorizationChecker</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">authorizationChecker</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$authorizationChecker</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">createFromRequest</span><span class=\\\"token punctuation\\\">(</span>Request <span class=\\\"token variable\\\">$request</span><span class=\\\"token punctuation\\\">,</span> bool <span class=\\\"token variable\\\">$normalization</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">array</span> <span class=\\\"token variable\\\">$extractedAttributes</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">array</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$context</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">createFromRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$request</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$normalization</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$extractedAttributes</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token variable\\\">$subject</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$request</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">attributes</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$subject</span> <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Book</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">isset</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'groups'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">authorizationChecker</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">isGranted</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'ROLE_ADMIN'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token variable\\\">$normalization</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'groups'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'admin_input'</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>If the user has <code>ROLE_ADMIN</code> permission and the subject is an instance of Book, <code>admin_input</code> group will be dynamically added to the denormalization context.\\nThe variable <code>$normalization</code> lets you check whether the context is for normalization (if true) or denormalization.</p>\\n<h2 id=\\\"name-conversion\\\"><a href=\\\"#name-conversion\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Name Conversion</h2>\\n<p>The Serializer Component provides a handy way to map PHP field names to serialized names. See the related <a href=\\\"http://symfony.com/doc/master/components/serializer.html#converting-property-names-when-serializing-and-deserializing\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Symfony documentation</a>.</p>\\n<p>To use this feature, declare a new service with id <code>app.name_converter</code>. For example, you can convert <code>CamelCase</code> to\\n<code>snake_case</code> with the following configuration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/services.yml</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">'Symfony\\\\Component\\\\Serializer\\\\NameConverter\\\\CamelCaseToSnakeCaseNameConverter'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token null important\\\">~</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/config.yml</span>\\n<span class=\\\"token key atrule\\\">api_platform</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">name_converter</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Symfony\\\\Component\\\\Serializer\\\\NameConverter\\\\CamelCaseToSnakeCaseNameConverter'</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"decorating-a-serializer-and-add-extra-data\\\"><a href=\\\"#decorating-a-serializer-and-add-extra-data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Decorating a Serializer and Add Extra Data</h2>\\n<p>In the following example, we will see how we add extra informations to the output.\\nHere is how we add the date on each request in <code>GET</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code><span class=\\\"token comment\\\"># app/config/services.yml</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">'AppBundle\\\\Serializer\\\\ApiNormalizer'</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token key atrule\\\">decorates</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'api_platform.jsonld.normalizer.item'</span>\\n        <span class=\\\"token key atrule\\\">arguments</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">'@AppBundle\\\\Serializer\\\\ApiNormalizer.inner'</span> <span class=\\\"token punctuation\\\">]</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/Appbundle/Serializer/ApiNormalizer</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Serializer</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Normalizer<span class=\\\"token punctuation\\\">\\\\</span>DenormalizerInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>Serializer<span class=\\\"token punctuation\\\">\\\\</span>Normalizer<span class=\\\"token punctuation\\\">\\\\</span>NormalizerInterface</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ApiNormalizer</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">NormalizerInterface</span><span class=\\\"token punctuation\\\">,</span> DenormalizerInterface\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__construct</span><span class=\\\"token punctuation\\\">(</span>NormalizerInterface <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token variable\\\">$decorated</span> <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">DenormalizerInterface</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\"><span class=\\\"token punctuation\\\">\\\\</span>InvalidArgumentException</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">sprintf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'The decorated normalizer must implement the %s.'</span><span class=\\\"token punctuation\\\">,</span> DenormalizerInterface<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$decorated</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">supportsNormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">supportsNormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$object</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">array</span> <span class=\\\"token variable\\\">$context</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$data</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$object</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">is_array</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'date'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">date</span><span class=\\\"token punctuation\\\">(</span>\\\\<span class=\\\"token package\\\">DateTime</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">RFC3339</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">supportsDenormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$type</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">supportsDenormalization</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$type</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">denormalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$class</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">array</span> <span class=\\\"token variable\\\">$context</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">decorated</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">denormalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$data</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$class</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$format</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$context</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"entity-identifier-case\\\"><a href=\\\"#entity-identifier-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Entity Identifier Case</h2>\\n<p>API Platform is able to guess the entity identifier using <a href=\\\"http://doctrine-orm.readthedocs.org/en/latest/reference/basic-mapping.html#identifiers-primary-keys\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Doctrine metadata</a>.\\nIt also supports composite identifiers.</p>\\n<p>If Doctrine ORM is not used, the identifier must be marked explicitly using the <code>identifier</code> attribute of the <code>ApiPlatform\\\\Core\\\\Annotation\\\\ApiProperty</code>\\nannotation.</p>\\n<p>In some cases, you will want to set the identifier of a resource from the client (e.g. a client-side generated UUID, or a slug).\\nIn this case the identifier property must become a writable class property.</p>\\n<p>To do this you simply have to:</p>\\n<ul>\\n<li>Create a setter for the identifier of the entity or make it a <code>public</code> property</li>\\n<li>Add the denormalization group to the property if you use a specific denormalization group</li>\\n<li>If you use Doctrine ORM, be sure to <strong>not</strong> mark this property with <a href=\\\"http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/reference/basic-mapping.html#identifier-generation-strategies\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">the <code>@GeneratedValue</code> annotation</a>\\nor use the <code>NONE</code> value</li>\\n</ul>\\n<h2 id=\\\"embedding-the-json-ld-context\\\"><a href=\\\"#embedding-the-json-ld-context\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Embedding the JSON-LD Context</h2>\\n<p>By default, the generated <a href=\\\"https://www.w3.org/TR/json-ld/#the-context\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">JSON-LD context</a> (<code>@context</code>) is only reference by\\nan IRI. A client supporting JSON-LD must send a second HTTP request to retrieve it:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/contexts/Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>You can configure API Platform to embed the JSON-LD context in the root document like the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"@context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"@vocab\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://localhost:8000/apidoc#\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"hydra\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://www.w3.org/ns/hydra/core#\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://schema.org/name\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"http://schema.org/author\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/books/62\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"@type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"My awesome book\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"author\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"/people/59\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>To do so, use the following configuration:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/Entity/Book.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>Annotation<span class=\\\"token punctuation\\\">\\\\</span>ApiResource</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * @ApiResource(\\n *     attributes={\\\"normalization_context\\\"={\\\"jsonld_embed_context\\\"=true}\\n * })\\n */</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Book</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\"},\"navDoc\":{\"edges\":[{\"node\":{\"title\":\"The Distribution\",\"path\":\"distribution\",\"items\":[{\"id\":\"index\",\"title\":\"Creating a Fully Featured API in 5 Minutes\",\"anchors\":null},{\"id\":\"testing\",\"title\":\"Testing and Specifying the API\",\"anchors\":null}]}},{\"node\":{\"title\":\"The API Component\",\"path\":\"core\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installing-api-platform-core\",\"title\":\"Installing API Platform Core\"},{\"id\":\"before-reading-this-documentation\",\"title\":\"Before Reading this Documentation\"},{\"id\":\"mapping-the-entities\",\"title\":\"Mapping the Entities\"}]},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null},{\"id\":\"operations\",\"title\":\"Operations\",\"anchors\":[{\"id\":\"enabling-and-disabling-operations\",\"title\":\"Enabling and Disabling Operations\"},{\"id\":\"configuring-operations\",\"title\":\"Configuring Operations\"},{\"id\":\"subresources\",\"title\":\"Subresources\"},{\"id\":\"creating-custom-operations-and-controllers\",\"title\":\"Creating Custom Operations and Controllers\"}]},{\"id\":\"default-order\",\"title\":\"Overriding Default Order\",\"anchors\":null},{\"id\":\"filters\",\"title\":\"Filters\",\"anchors\":[{\"id\":\"doctrine-orm-filters\",\"title\":\"Doctrine ORM Filters\"},{\"id\":\"serializer-filters\",\"title\":\"Serializer Filters\"},{\"id\":\"creating-custom-filters\",\"title\":\"Creating Custom Filters\"}]},{\"id\":\"serialization\",\"title\":\"The Serialization Process\",\"anchors\":[{\"id\":\"overall-process\",\"title\":\"Overall Process\"},{\"id\":\"available-serializers\",\"title\":\"Available Serializers\"},{\"id\":\"the-serialization-context-groups-and-relations\",\"title\":\"The Serialization Context, Groups and Relations\"},{\"id\":\"embedding-relations\",\"title\":\"Using Different Serialization Groups per Operation\"},{\"id\":\"embedding-relations\",\"title\":\"Embedding Relations\"},{\"id\":\"changing-the-serialization-context-dynamically\",\"title\":\"Changing the Serialization Context Dynamically\"},{\"id\":\"name-conversion\",\"title\":\"Name Conversion\"},{\"id\":\"entity-identifier-case\",\"title\":\"Entity Identifier Case\"},{\"id\":\"writable-entity-identifier\",\"title\":\"Writable Entity Identifier\"},{\"id\":\"embedding-the-json-ld-context\",\"title\":\"Embedding the JSON-LD Context\"},{\"id\":\"decorating-a-serializer-and-add-extra-data\",\"title\":\"Decorating a Serializer and Add Extra Data\"}]},{\"id\":\"content-negotiation\",\"title\":\"Content Negotiation\",\"anchors\":[{\"id\":\"enabling-several-formats\",\"title\":\"Enabling Several Formats\"},{\"id\":\"registering-a-custom-serializer\",\"title\":\"Registering a Custom Serializer\"},{\"id\":\"creating-a-responder\",\"title\":\"Creating a Responder\"},{\"id\":\"writing-a-custom-normalizer\",\"title\":\"Writing a Custom Normalizer\"}]},{\"id\":\"validation\",\"title\":\"Validation\",\"anchors\":[{\"id\":\"using-validation-groups\",\"title\":\"Using Validation Groups\"},{\"id\":\"dynamic-validation-groups\",\"title\":\"Dynamic Validation Groups\"}]},{\"id\":\"pagination\",\"title\":\"Pagination\",\"anchors\":[{\"id\":\"disabling-the-pagination\",\"title\":\"Disabling the Pagination\"},{\"id\":\"changing-the-number-of-items-per-page\",\"title\":\"Changing the Number of Items per Page\"}]},{\"id\":\"events\",\"title\":\"The Event System\",\"anchors\":null},{\"id\":\"data-providers\",\"title\":\"Data Providers\",\"anchors\":[{\"id\":\"creating-a-custom-data-provider\",\"title\":\"Custom Collection Data Provider\"},{\"id\":\"returning-a-paged-collection\",\"title\":\"Custom Item Data Provider\"}]},{\"id\":\"extensions\",\"title\":\"Extensions\",\"anchors\":[{\"id\":\"custom-extension\",\"title\":\"Custom Extension\"},{\"id\":\"example\",\"title\":\"Filter upon the current user\"}]},{\"id\":\"jwt\",\"title\":\"JWT Authentification\",\"anchors\":[{\"id\":\"installing-lexikjwtauthenticationnundle\",\"title\":\"Installing LexikJWTAuthenticationBundle\"},{\"id\":\"documenting-the-authentication-mechanism-with-swagger-open-api\",\"title\":\"Documenting the Authentication Mechanism with Swagger/Open API\"},{\"id\":\"testing-with-behat\",\"title\":\"Testing with Behat\"}]},{\"id\":\"security\",\"title\":\"Security\",\"anchors\":null},{\"id\":\"swagger\",\"title\":\"Swagger Support\",\"anchors\":[{\"id\":\"overriding-the-swagger-documentation\",\"title\":\"Overriding the Swagger documentation\"},{\"id\":\"using-the-swagger-context\",\"title\":\"Using the Swagger Context\"}]},{\"id\":\"performance\",\"title\":\"Performance\",\"anchors\":[{\"id\":\"enabling-the-builtin-http-cache-invalidation-system\",\"title\":\"Enabling the Builtin HTTP Cache Invalidation System\"},{\"id\":\"enabling-the-metadata-cache\",\"title\":\"Enabling the Metadata Cache\"},{\"id\":\"using-ppm-php-pm\",\"title\":\"Using PPM (PHP-PM)\"},{\"id\":\"doctrine-queries-and-indexes\",\"title\":\"Doctrine Queries and Indexes\"}]},{\"id\":\"operation-path-naming\",\"title\":\"Operation Path Naming\",\"anchors\":[{\"id\":\"configuration\",\"title\":\"Configuration\"},{\"id\":\"create-a-custom-operation-path-resolver\",\"title\":\"Create a Custom Operation Path Naming\"}]},{\"id\":\"form-data\",\"title\":\"Accept \\\"application/x-www-form-urlencoded\\\" Form Data\",\"anchors\":null},{\"id\":\"external-vocabularies\",\"title\":\"Using External Vocabularies\",\"anchors\":null},{\"id\":\"extending-jsonld-context\",\"title\":\"Extending the JSON-LD context\",\"anchors\":null},{\"id\":\"fosuser-bundle\",\"title\":\"FOSUserBundle Integration\",\"anchors\":[{\"id\":\"installing-the-bundle\",\"title\":\"Installing the Bundle\"},{\"id\":\"enabling-the-bridge\",\"title\":\"Enabling the Bridge\"},{\"id\":\"creating-a-user-entity-with-serialization-groups\",\"title\":\"Creating a \\\"User\\\" Entity with Serialization Groups\"}]},{\"id\":\"nelmio-api-doc\",\"title\":\"NelmioApiDocBundle integration\",\"anchors\":null},{\"id\":\"angularjs-integration\",\"title\":\"AngularJS Integration\",\"anchors\":[{\"id\":\"restangular\",\"title\":\"Restangular\"},{\"id\":\"ng-admin\",\"title\":\"ng-admin\"}]}]}},{\"node\":{\"title\":\"The Schema Generator Component\",\"path\":\"schema-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":null},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null}]}},{\"node\":{\"title\":\"The Admin Component\",\"path\":\"admin\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installation\",\"title\":\"Installation\"},{\"id\":\"creating-the-admin\",\"title\":\"Creating the Admin\"},{\"id\":\"customizing-the-admin\",\"title\":\"Customizing the Admin\"}]},{\"id\":\"authentication-support\",\"title\":\"Authentication Support\",\"anchors\":null},{\"id\":\"handling-relations-to-collections\",\"title\":\"Handling Relations to Collections\",\"anchors\":[{\"id\":\"using-an-autocomplete-input-for-relations\",\"title\":\"Using an Autocomplete Input for Relations\"}]}]}},{\"node\":{\"title\":\"The Client Generator Component\",\"path\":\"client-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"react\",\"title\":\"React generator\",\"anchors\":null},{\"id\":\"vuejs\",\"title\":\"Vue.js generator\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null}]}},{\"node\":{\"title\":\"Deployment\",\"path\":\"deployment\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"heroku\",\"title\":\"Deploying an API Platform App on Heroku\",\"anchors\":null},{\"id\":\"docker\",\"title\":\"Using API Platform with Docker\",\"anchors\":[{\"id\":\"services\",\"title\":\"Services\"},{\"id\":\"installation\",\"title\":\"Installation\"}]}]}},{\"node\":{\"title\":\"Extra\",\"path\":\"extra\",\"items\":[{\"id\":\"philosophy\",\"title\":\"The Project's Philosophy\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null},{\"id\":\"contribution-guides\",\"title\":\"Contribution Guides\",\"anchors\":null},{\"id\":\"conduct\",\"title\":\"Contributor Code Of Conduct\",\"anchors\":null}]}}]}},\"pathContext\":{\"path\":\"docs/core/serialization\",\"current\":{\"path\":\"docs/core/serialization\",\"title\":\"The API Component - The Serialization Process\"},\"prev\":{\"path\":\"docs/core/filters\",\"title\":\"Filters\",\"rootPath\":\"The API Component\"},\"next\":{\"path\":\"docs/core/content-negotiation\",\"title\":\"Content Negotiation\",\"rootPath\":\"The API Component\"}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-core-serialization.json\n// module id = 408\n// module chunks = 101494339953172"],"sourceRoot":""}