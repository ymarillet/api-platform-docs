{"version":3,"sources":["webpack:///path---docs-core-events-0eca5c4dcefbb12803b5.js","webpack:///./.cache/json/docs-core-events.json"],"names":["webpackJsonp","393","module","exports","data","post","html","navDoc","edges","node","title","path","items","id","anchors","pathContext","current","prev","rootPath","next"],"mappings":"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","file":"path---docs-core-events-0eca5c4dcefbb12803b5.js","sourcesContent":["webpackJsonp([80086460246139],{\n\n/***/ 393:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"post\":{\"html\":\"<h1 id=\\\"the-event-system\\\"><a href=\\\"#the-event-system\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The Event System</h1>\\n<p>API Platform Core implements the <a href=\\\"https://github.com/pmjones/adr\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Action-Domain-Responder</a> pattern. This implementation\\nis covered in depth in the <a href=\\\"/docs/core/operations#creating-custom-operations-and-controllers\\\">Creating custom operations and controllers</a>\\nchapter.</p>\\n<p>Basically, API Platform Core execute an action class that will return an entity or a collection of entities. Then a series\\nof event listeners are executed which validate the data, persist it in database, serialize it (typically in a JSON-LD document)\\nand create an HTTP response that will be sent to the client.</p>\\n<p>To do so, API Platform Core leverages <a href=\\\"https://symfony.com/doc/current/reference/events.html#kernel-events\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">events triggered by the Symfony HTTP Kernel</a>.\\nYou can also hook your own code to those events. They are very handy and powerful extension points available at all points\\nof the request lifecycle.</p>\\n<p>In the following example, we will send a mail each time a new book is created using the API:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/EventSubscriber/BookMailSubscriber.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>EventSubscriber</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>EventListener<span class=\\\"token punctuation\\\">\\\\</span>EventPriorities</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity<span class=\\\"token punctuation\\\">\\\\</span>Book</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>EventDispatcher<span class=\\\"token punctuation\\\">\\\\</span>EventSubscriberInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpFoundation<span class=\\\"token punctuation\\\">\\\\</span>Request</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpKernel<span class=\\\"token punctuation\\\">\\\\</span>Event<span class=\\\"token punctuation\\\">\\\\</span>GetResponseForControllerResultEvent</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpKernel<span class=\\\"token punctuation\\\">\\\\</span>KernelEvents</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">BookMailSubscriber</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">EventSubscriberInterface</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$mailer</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__construct</span><span class=\\\"token punctuation\\\">(</span>\\\\<span class=\\\"token package\\\">Swift_Mailer</span> <span class=\\\"token variable\\\">$mailer</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">mailer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$mailer</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getSubscribedEvents</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>\\n            KernelEvents<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">VIEW</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'sendMail'</span><span class=\\\"token punctuation\\\">,</span> EventPriorities<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">POST_WRITE</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">sendMail</span><span class=\\\"token punctuation\\\">(</span>GetResponseForControllerResultEvent <span class=\\\"token variable\\\">$event</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$book</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$event</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getControllerResult</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token variable\\\">$method</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$event</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token variable\\\">$book</span> <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Book</span> <span class=\\\"token operator\\\">||</span> Request<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">METHOD_POST</span> <span class=\\\"token operator\\\">!==</span> <span class=\\\"token variable\\\">$method</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token variable\\\">$message</span> <span class=\\\"token operator\\\">=</span> \\\\<span class=\\\"token package\\\">Swift_Message</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">newInstance</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setSubject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'A new book has been added'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setFrom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'system@example.com'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'contact@les-tilleuls.coop'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setBody</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">sprintf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'The book #%d has been added.'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$book</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">mailer</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$message</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>If you use the official API Platform distribution, creating the previous class is enough. The Symfony Dependency Injection\\ncomponent will automatically register this subscriber as a service and will inject its dependencies thanks to the <a href=\\\"http://symfony.com/doc/current/components/dependency_injection/autowiring.html\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">autowiring\\nfeature</a>.</p>\\n<p>Alternatively, <a href=\\\"http://symfony.com/doc/current/components/http_kernel/introduction.html#creating-an-event-listener\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">the subscriber must be registered manually</a>.</p>\\n<p><a href=\\\"http://doctrine-orm.readthedocs.org/en/latest/reference/events.html#reference-events-lifecycle-events\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Doctrine events</a>\\nare also available (if you use it) if you want to hook at the object lifecycle events.</p>\\n<p>Built-in event listeners are:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Event</th>\\n<th>Pre &#x26; Post hooks</th>\\n<th>Priority</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>AddFormatListener</code></td>\\n<td><code>kernel.request</code></td>\\n<td>None</td>\\n<td>7</td>\\n<td>guess the best response format (\\n<a href=\\\"/docs/core/content-negotiation\\\">content negotiation</a>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>ReadListener</code></td>\\n<td><code>kernel.request</code></td>\\n<td><code>PRE_READ</code>\\n, \\n<code>POST_READ</code></td>\\n<td>4</td>\\n<td>retrieve data from the persistence system using the \\n<a href=\\\"/docs/core/data-providers\\\">data providers</a></td>\\n</tr>\\n<tr>\\n<td><code>DeserializeListener</code></td>\\n<td><code>kernel.request</code></td>\\n<td><code>PRE_DESERIALIZE</code>\\n, \\n<code>POST_DESERIALIZE</code></td>\\n<td>2</td>\\n<td>deserialize data into a PHP entity (\\n<code>GET</code>\\n, \\n<code>POST</code>\\n, \\n<code>DELETE</code>\\n); update the entity retrieved using the data provider (\\n<code>PUT</code>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>ValidateListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td><code>PRE_VALIDATE</code>\\n, \\n<code>POST_VALIDATE</code></td>\\n<td>64</td>\\n<td><a href=\\\"/docs/core/validation\\\">validate data</a>\\n (\\n<code>POST</code>\\n, \\n<code>PUT</code>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>WriteListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td><code>PRE_WRITE</code>\\n, \\n<code>POST_WRITE</code></td>\\n<td>32</td>\\n<td>if using the Doctrine ORM, persist data (\\n<code>POST</code>\\n, \\n<code>PUT</code>\\n, \\n<code>DELETE</code>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>SerializeListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td>None</td>\\n<td>16</td>\\n<td>serialize the PHP entity in string \\n<a href=\\\"/docs/core/content-negotiation\\\">according to the request format</a></td>\\n</tr>\\n<tr>\\n<td><code>RespondListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td><code>PRE_RESPOND</code>\\n, \\n<code>POST_RESPOND</code></td>\\n<td>8</td>\\n<td>transform serialized to a \\n<code>Symfony\\\\Component\\\\HttpFoundation\\\\Response</code>\\n instance</td>\\n</tr>\\n<tr>\\n<td><code>AddLinkHeaderListener</code></td>\\n<td><code>kernel.response</code></td>\\n<td>None</td>\\n<td>0</td>\\n<td>add a \\n<code>Link</code>\\n HTTP header pointing to the Hydra documentation</td>\\n</tr>\\n<tr>\\n<td><code>ValidationExceptionListener</code></td>\\n<td><code>kernel.exception</code></td>\\n<td>None</td>\\n<td>0</td>\\n<td>serialize validation exceptions in the Hydra format</td>\\n</tr>\\n<tr>\\n<td><code>ExceptionListener</code></td>\\n<td><code>kernel.exception</code></td>\\n<td>None</td>\\n<td>-96</td>\\n<td>serialize PHP exceptions in the Hydra format (including the stack trace in debug mode)</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>Those built-in listeners are always executed for routes managed by API Platform. Registering your own event listeners to\\nadd extra logic is convenient.</p>\\n<p>The <a href=\\\"https://github.com/api-platform/core/blob/master/src/EventListener/EventPriorities.php\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\"><code>ApiPlatform\\\\Core\\\\EventListener\\\\EventPriorities</code></a> class comes with a convenient set of class's constants corresponding to commonly used priorities:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Constant</th>\\n<th>Event</th>\\n<th>Priority</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>PRE_READ</code></td>\\n<td><code>kernel.request</code></td>\\n<td>5</td>\\n</tr>\\n<tr>\\n<td><code>POST_READ</code></td>\\n<td><code>kernel.request</code></td>\\n<td>3</td>\\n</tr>\\n<tr>\\n<td><code>PRE_DESERIALIZE</code></td>\\n<td><code>kernel.request</code></td>\\n<td>3</td>\\n</tr>\\n<tr>\\n<td><code>POST_DESERIALIZE</code></td>\\n<td><code>kernel.request</code></td>\\n<td>1</td>\\n</tr>\\n<tr>\\n<td><code>PRE_VALIDATE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>65</td>\\n</tr>\\n<tr>\\n<td><code>POST_VALIDATE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>63</td>\\n</tr>\\n<tr>\\n<td><code>PRE_WRITE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>33</td>\\n</tr>\\n<tr>\\n<td><code>POST_WRITE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>31</td>\\n</tr>\\n<tr>\\n<td><code>PRE_RESPOND</code></td>\\n<td><code>kernel.view</code></td>\\n<td>9</td>\\n</tr>\\n<tr>\\n<td><code>POST_RESPOND</code></td>\\n<td><code>kernel.response</code></td>\\n<td>0</td>\\n</tr>\\n</tbody>\\n</table>\"},\"navDoc\":{\"edges\":[{\"node\":{\"title\":\"The Distribution\",\"path\":\"distribution\",\"items\":[{\"id\":\"index\",\"title\":\"Creating a Fully Featured API in 5 Minutes\",\"anchors\":null},{\"id\":\"testing\",\"title\":\"Testing and Specifying the API\",\"anchors\":null}]}},{\"node\":{\"title\":\"The API Component\",\"path\":\"core\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installing-api-platform-core\",\"title\":\"Installing API Platform Core\"},{\"id\":\"before-reading-this-documentation\",\"title\":\"Before Reading this Documentation\"},{\"id\":\"mapping-the-entities\",\"title\":\"Mapping the Entities\"}]},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null},{\"id\":\"operations\",\"title\":\"Operations\",\"anchors\":[{\"id\":\"enabling-and-disabling-operations\",\"title\":\"Enabling and Disabling Operations\"},{\"id\":\"configuring-operations\",\"title\":\"Configuring Operations\"},{\"id\":\"subresources\",\"title\":\"Subresources\"},{\"id\":\"creating-custom-operations-and-controllers\",\"title\":\"Creating Custom Operations and Controllers\"}]},{\"id\":\"default-order\",\"title\":\"Overriding Default Order\",\"anchors\":null},{\"id\":\"filters\",\"title\":\"Filters\",\"anchors\":[{\"id\":\"doctrine-orm-filters\",\"title\":\"Doctrine ORM Filters\"},{\"id\":\"serializer-filters\",\"title\":\"Serializer Filters\"},{\"id\":\"creating-custom-filters\",\"title\":\"Creating Custom Filters\"}]},{\"id\":\"serialization\",\"title\":\"The Serialization Process\",\"anchors\":[{\"id\":\"overall-process\",\"title\":\"Overall Process\"},{\"id\":\"available-serializers\",\"title\":\"Available Serializers\"},{\"id\":\"the-serialization-context-groups-and-relations\",\"title\":\"The Serialization Context, Groups and Relations\"},{\"id\":\"embedding-relations\",\"title\":\"Using Different Serialization Groups per Operation\"},{\"id\":\"embedding-relations\",\"title\":\"Embedding Relations\"},{\"id\":\"changing-the-serialization-context-dynamically\",\"title\":\"Changing the Serialization Context Dynamically\"},{\"id\":\"name-conversion\",\"title\":\"Name Conversion\"},{\"id\":\"entity-identifier-case\",\"title\":\"Entity Identifier Case\"},{\"id\":\"writable-entity-identifier\",\"title\":\"Writable Entity Identifier\"},{\"id\":\"embedding-the-json-ld-context\",\"title\":\"Embedding the JSON-LD Context\"},{\"id\":\"decorating-a-serializer-and-add-extra-data\",\"title\":\"Decorating a Serializer and Add Extra Data\"}]},{\"id\":\"content-negotiation\",\"title\":\"Content Negotiation\",\"anchors\":[{\"id\":\"enabling-several-formats\",\"title\":\"Enabling Several Formats\"},{\"id\":\"registering-a-custom-serializer\",\"title\":\"Registering a Custom Serializer\"},{\"id\":\"creating-a-responder\",\"title\":\"Creating a Responder\"},{\"id\":\"writing-a-custom-normalizer\",\"title\":\"Writing a Custom Normalizer\"}]},{\"id\":\"validation\",\"title\":\"Validation\",\"anchors\":[{\"id\":\"using-validation-groups\",\"title\":\"Using Validation Groups\"},{\"id\":\"dynamic-validation-groups\",\"title\":\"Dynamic Validation Groups\"}]},{\"id\":\"pagination\",\"title\":\"Pagination\",\"anchors\":[{\"id\":\"disabling-the-pagination\",\"title\":\"Disabling the Pagination\"},{\"id\":\"changing-the-number-of-items-per-page\",\"title\":\"Changing the Number of Items per Page\"}]},{\"id\":\"events\",\"title\":\"The Event System\",\"anchors\":null},{\"id\":\"data-providers\",\"title\":\"Data Providers\",\"anchors\":[{\"id\":\"creating-a-custom-data-provider\",\"title\":\"Custom Collection Data Provider\"},{\"id\":\"returning-a-paged-collection\",\"title\":\"Custom Item Data Provider\"}]},{\"id\":\"extensions\",\"title\":\"Extensions\",\"anchors\":[{\"id\":\"custom-extension\",\"title\":\"Custom Extension\"},{\"id\":\"example\",\"title\":\"Filter upon the current user\"}]},{\"id\":\"jwt\",\"title\":\"JWT Authentification\",\"anchors\":[{\"id\":\"installing-lexikjwtauthenticationnundle\",\"title\":\"Installing LexikJWTAuthenticationBundle\"},{\"id\":\"documenting-the-authentication-mechanism-with-swagger-open-api\",\"title\":\"Documenting the Authentication Mechanism with Swagger/Open API\"},{\"id\":\"testing-with-behat\",\"title\":\"Testing with Behat\"}]},{\"id\":\"security\",\"title\":\"Security\",\"anchors\":null},{\"id\":\"swagger\",\"title\":\"Swagger Support\",\"anchors\":[{\"id\":\"overriding-the-swagger-documentation\",\"title\":\"Overriding the Swagger documentation\"},{\"id\":\"using-the-swagger-context\",\"title\":\"Using the Swagger Context\"}]},{\"id\":\"performance\",\"title\":\"Performance\",\"anchors\":[{\"id\":\"enabling-the-builtin-http-cache-invalidation-system\",\"title\":\"Enabling the Builtin HTTP Cache Invalidation System\"},{\"id\":\"enabling-the-metadata-cache\",\"title\":\"Enabling the Metadata Cache\"},{\"id\":\"using-ppm-php-pm\",\"title\":\"Using PPM (PHP-PM)\"},{\"id\":\"doctrine-queries-and-indexes\",\"title\":\"Doctrine Queries and Indexes\"}]},{\"id\":\"operation-path-naming\",\"title\":\"Operation Path Naming\",\"anchors\":[{\"id\":\"configuration\",\"title\":\"Configuration\"},{\"id\":\"create-a-custom-operation-path-resolver\",\"title\":\"Create a Custom Operation Path Naming\"}]},{\"id\":\"form-data\",\"title\":\"Accept \\\"application/x-www-form-urlencoded\\\" Form Data\",\"anchors\":null},{\"id\":\"external-vocabularies\",\"title\":\"Using External Vocabularies\",\"anchors\":null},{\"id\":\"extending-jsonld-context\",\"title\":\"Extending the JSON-LD context\",\"anchors\":null},{\"id\":\"fosuser-bundle\",\"title\":\"FOSUserBundle Integration\",\"anchors\":[{\"id\":\"installing-the-bundle\",\"title\":\"Installing the Bundle\"},{\"id\":\"enabling-the-bridge\",\"title\":\"Enabling the Bridge\"},{\"id\":\"creating-a-user-entity-with-serialization-groups\",\"title\":\"Creating a \\\"User\\\" Entity with Serialization Groups\"}]},{\"id\":\"nelmio-api-doc\",\"title\":\"NelmioApiDocBundle integration\",\"anchors\":null},{\"id\":\"angularjs-integration\",\"title\":\"AngularJS Integration\",\"anchors\":[{\"id\":\"restangular\",\"title\":\"Restangular\"},{\"id\":\"ng-admin\",\"title\":\"ng-admin\"}]}]}},{\"node\":{\"title\":\"The Schema Generator Component\",\"path\":\"schema-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":null},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null}]}},{\"node\":{\"title\":\"The Admin Component\",\"path\":\"admin\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installation\",\"title\":\"Installation\"},{\"id\":\"creating-the-admin\",\"title\":\"Creating the Admin\"},{\"id\":\"customizing-the-admin\",\"title\":\"Customizing the Admin\"}]},{\"id\":\"authentication-support\",\"title\":\"Authentication Support\",\"anchors\":null},{\"id\":\"handling-relations-to-collections\",\"title\":\"Handling Relations to Collections\",\"anchors\":[{\"id\":\"using-an-autocomplete-input-for-relations\",\"title\":\"Using an Autocomplete Input for Relations\"}]}]}},{\"node\":{\"title\":\"The Client Generator Component\",\"path\":\"client-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"react\",\"title\":\"React generator\",\"anchors\":null},{\"id\":\"vuejs\",\"title\":\"Vue.js generator\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null}]}},{\"node\":{\"title\":\"Deployment\",\"path\":\"deployment\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"heroku\",\"title\":\"Deploying an API Platform App on Heroku\",\"anchors\":null},{\"id\":\"docker\",\"title\":\"Using API Platform with Docker\",\"anchors\":[{\"id\":\"services\",\"title\":\"Services\"},{\"id\":\"installation\",\"title\":\"Installation\"}]}]}},{\"node\":{\"title\":\"Extra\",\"path\":\"extra\",\"items\":[{\"id\":\"philosophy\",\"title\":\"The Project's Philosophy\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null},{\"id\":\"contribution-guides\",\"title\":\"Contribution Guides\",\"anchors\":null},{\"id\":\"conduct\",\"title\":\"Contributor Code Of Conduct\",\"anchors\":null}]}}]}},\"pathContext\":{\"path\":\"docs/core/events\",\"current\":{\"path\":\"docs/core/events\",\"title\":\"The API Component - The Event System\"},\"prev\":{\"path\":\"docs/core/pagination\",\"title\":\"Pagination\",\"rootPath\":\"The API Component\"},\"next\":{\"path\":\"docs/core/data-providers\",\"title\":\"Data Providers\",\"rootPath\":\"The API Component\"}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-core-events-0eca5c4dcefbb12803b5.js","module.exports = {\"data\":{\"post\":{\"html\":\"<h1 id=\\\"the-event-system\\\"><a href=\\\"#the-event-system\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The Event System</h1>\\n<p>API Platform Core implements the <a href=\\\"https://github.com/pmjones/adr\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Action-Domain-Responder</a> pattern. This implementation\\nis covered in depth in the <a href=\\\"/docs/core/operations#creating-custom-operations-and-controllers\\\">Creating custom operations and controllers</a>\\nchapter.</p>\\n<p>Basically, API Platform Core execute an action class that will return an entity or a collection of entities. Then a series\\nof event listeners are executed which validate the data, persist it in database, serialize it (typically in a JSON-LD document)\\nand create an HTTP response that will be sent to the client.</p>\\n<p>To do so, API Platform Core leverages <a href=\\\"https://symfony.com/doc/current/reference/events.html#kernel-events\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">events triggered by the Symfony HTTP Kernel</a>.\\nYou can also hook your own code to those events. They are very handy and powerful extension points available at all points\\nof the request lifecycle.</p>\\n<p>In the following example, we will send a mail each time a new book is created using the API:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token comment\\\">// src/AppBundle/EventSubscriber/BookMailSubscriber.php</span>\\n\\n<span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>EventSubscriber</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">ApiPlatform<span class=\\\"token punctuation\\\">\\\\</span>Core<span class=\\\"token punctuation\\\">\\\\</span>EventListener<span class=\\\"token punctuation\\\">\\\\</span>EventPriorities</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">AppBundle<span class=\\\"token punctuation\\\">\\\\</span>Entity<span class=\\\"token punctuation\\\">\\\\</span>Book</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>EventDispatcher<span class=\\\"token punctuation\\\">\\\\</span>EventSubscriberInterface</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpFoundation<span class=\\\"token punctuation\\\">\\\\</span>Request</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpKernel<span class=\\\"token punctuation\\\">\\\\</span>Event<span class=\\\"token punctuation\\\">\\\\</span>GetResponseForControllerResultEvent</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">use</span> <span class=\\\"token package\\\">Symfony<span class=\\\"token punctuation\\\">\\\\</span>Component<span class=\\\"token punctuation\\\">\\\\</span>HttpKernel<span class=\\\"token punctuation\\\">\\\\</span>KernelEvents</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">final</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">BookMailSubscriber</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">EventSubscriberInterface</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token variable\\\">$mailer</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__construct</span><span class=\\\"token punctuation\\\">(</span>\\\\<span class=\\\"token package\\\">Swift_Mailer</span> <span class=\\\"token variable\\\">$mailer</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">mailer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$mailer</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getSubscribedEvents</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>\\n            KernelEvents<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">VIEW</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'sendMail'</span><span class=\\\"token punctuation\\\">,</span> EventPriorities<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">POST_WRITE</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">sendMail</span><span class=\\\"token punctuation\\\">(</span>GetResponseForControllerResultEvent <span class=\\\"token variable\\\">$event</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token variable\\\">$book</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$event</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getControllerResult</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token variable\\\">$method</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token variable\\\">$event</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span><span class=\\\"token variable\\\">$book</span> <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Book</span> <span class=\\\"token operator\\\">||</span> Request<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token constant\\\">METHOD_POST</span> <span class=\\\"token operator\\\">!==</span> <span class=\\\"token variable\\\">$method</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token variable\\\">$message</span> <span class=\\\"token operator\\\">=</span> \\\\<span class=\\\"token package\\\">Swift_Message</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">newInstance</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setSubject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'A new book has been added'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setFrom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'system@example.com'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'contact@les-tilleuls.coop'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">setBody</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">sprintf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'The book #%d has been added.'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token variable\\\">$book</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">getId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token variable\\\">$this</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token property\\\">mailer</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$message</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>If you use the official API Platform distribution, creating the previous class is enough. The Symfony Dependency Injection\\ncomponent will automatically register this subscriber as a service and will inject its dependencies thanks to the <a href=\\\"http://symfony.com/doc/current/components/dependency_injection/autowiring.html\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">autowiring\\nfeature</a>.</p>\\n<p>Alternatively, <a href=\\\"http://symfony.com/doc/current/components/http_kernel/introduction.html#creating-an-event-listener\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">the subscriber must be registered manually</a>.</p>\\n<p><a href=\\\"http://doctrine-orm.readthedocs.org/en/latest/reference/events.html#reference-events-lifecycle-events\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\">Doctrine events</a>\\nare also available (if you use it) if you want to hook at the object lifecycle events.</p>\\n<p>Built-in event listeners are:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Event</th>\\n<th>Pre &#x26; Post hooks</th>\\n<th>Priority</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>AddFormatListener</code></td>\\n<td><code>kernel.request</code></td>\\n<td>None</td>\\n<td>7</td>\\n<td>guess the best response format (\\n<a href=\\\"/docs/core/content-negotiation\\\">content negotiation</a>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>ReadListener</code></td>\\n<td><code>kernel.request</code></td>\\n<td><code>PRE_READ</code>\\n, \\n<code>POST_READ</code></td>\\n<td>4</td>\\n<td>retrieve data from the persistence system using the \\n<a href=\\\"/docs/core/data-providers\\\">data providers</a></td>\\n</tr>\\n<tr>\\n<td><code>DeserializeListener</code></td>\\n<td><code>kernel.request</code></td>\\n<td><code>PRE_DESERIALIZE</code>\\n, \\n<code>POST_DESERIALIZE</code></td>\\n<td>2</td>\\n<td>deserialize data into a PHP entity (\\n<code>GET</code>\\n, \\n<code>POST</code>\\n, \\n<code>DELETE</code>\\n); update the entity retrieved using the data provider (\\n<code>PUT</code>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>ValidateListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td><code>PRE_VALIDATE</code>\\n, \\n<code>POST_VALIDATE</code></td>\\n<td>64</td>\\n<td><a href=\\\"/docs/core/validation\\\">validate data</a>\\n (\\n<code>POST</code>\\n, \\n<code>PUT</code>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>WriteListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td><code>PRE_WRITE</code>\\n, \\n<code>POST_WRITE</code></td>\\n<td>32</td>\\n<td>if using the Doctrine ORM, persist data (\\n<code>POST</code>\\n, \\n<code>PUT</code>\\n, \\n<code>DELETE</code>\\n)</td>\\n</tr>\\n<tr>\\n<td><code>SerializeListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td>None</td>\\n<td>16</td>\\n<td>serialize the PHP entity in string \\n<a href=\\\"/docs/core/content-negotiation\\\">according to the request format</a></td>\\n</tr>\\n<tr>\\n<td><code>RespondListener</code></td>\\n<td><code>kernel.view</code></td>\\n<td><code>PRE_RESPOND</code>\\n, \\n<code>POST_RESPOND</code></td>\\n<td>8</td>\\n<td>transform serialized to a \\n<code>Symfony\\\\Component\\\\HttpFoundation\\\\Response</code>\\n instance</td>\\n</tr>\\n<tr>\\n<td><code>AddLinkHeaderListener</code></td>\\n<td><code>kernel.response</code></td>\\n<td>None</td>\\n<td>0</td>\\n<td>add a \\n<code>Link</code>\\n HTTP header pointing to the Hydra documentation</td>\\n</tr>\\n<tr>\\n<td><code>ValidationExceptionListener</code></td>\\n<td><code>kernel.exception</code></td>\\n<td>None</td>\\n<td>0</td>\\n<td>serialize validation exceptions in the Hydra format</td>\\n</tr>\\n<tr>\\n<td><code>ExceptionListener</code></td>\\n<td><code>kernel.exception</code></td>\\n<td>None</td>\\n<td>-96</td>\\n<td>serialize PHP exceptions in the Hydra format (including the stack trace in debug mode)</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>Those built-in listeners are always executed for routes managed by API Platform. Registering your own event listeners to\\nadd extra logic is convenient.</p>\\n<p>The <a href=\\\"https://github.com/api-platform/core/blob/master/src/EventListener/EventPriorities.php\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener noreferrer\\\"><code>ApiPlatform\\\\Core\\\\EventListener\\\\EventPriorities</code></a> class comes with a convenient set of class's constants corresponding to commonly used priorities:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Constant</th>\\n<th>Event</th>\\n<th>Priority</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>PRE_READ</code></td>\\n<td><code>kernel.request</code></td>\\n<td>5</td>\\n</tr>\\n<tr>\\n<td><code>POST_READ</code></td>\\n<td><code>kernel.request</code></td>\\n<td>3</td>\\n</tr>\\n<tr>\\n<td><code>PRE_DESERIALIZE</code></td>\\n<td><code>kernel.request</code></td>\\n<td>3</td>\\n</tr>\\n<tr>\\n<td><code>POST_DESERIALIZE</code></td>\\n<td><code>kernel.request</code></td>\\n<td>1</td>\\n</tr>\\n<tr>\\n<td><code>PRE_VALIDATE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>65</td>\\n</tr>\\n<tr>\\n<td><code>POST_VALIDATE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>63</td>\\n</tr>\\n<tr>\\n<td><code>PRE_WRITE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>33</td>\\n</tr>\\n<tr>\\n<td><code>POST_WRITE</code></td>\\n<td><code>kernel.view</code></td>\\n<td>31</td>\\n</tr>\\n<tr>\\n<td><code>PRE_RESPOND</code></td>\\n<td><code>kernel.view</code></td>\\n<td>9</td>\\n</tr>\\n<tr>\\n<td><code>POST_RESPOND</code></td>\\n<td><code>kernel.response</code></td>\\n<td>0</td>\\n</tr>\\n</tbody>\\n</table>\"},\"navDoc\":{\"edges\":[{\"node\":{\"title\":\"The Distribution\",\"path\":\"distribution\",\"items\":[{\"id\":\"index\",\"title\":\"Creating a Fully Featured API in 5 Minutes\",\"anchors\":null},{\"id\":\"testing\",\"title\":\"Testing and Specifying the API\",\"anchors\":null}]}},{\"node\":{\"title\":\"The API Component\",\"path\":\"core\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installing-api-platform-core\",\"title\":\"Installing API Platform Core\"},{\"id\":\"before-reading-this-documentation\",\"title\":\"Before Reading this Documentation\"},{\"id\":\"mapping-the-entities\",\"title\":\"Mapping the Entities\"}]},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null},{\"id\":\"operations\",\"title\":\"Operations\",\"anchors\":[{\"id\":\"enabling-and-disabling-operations\",\"title\":\"Enabling and Disabling Operations\"},{\"id\":\"configuring-operations\",\"title\":\"Configuring Operations\"},{\"id\":\"subresources\",\"title\":\"Subresources\"},{\"id\":\"creating-custom-operations-and-controllers\",\"title\":\"Creating Custom Operations and Controllers\"}]},{\"id\":\"default-order\",\"title\":\"Overriding Default Order\",\"anchors\":null},{\"id\":\"filters\",\"title\":\"Filters\",\"anchors\":[{\"id\":\"doctrine-orm-filters\",\"title\":\"Doctrine ORM Filters\"},{\"id\":\"serializer-filters\",\"title\":\"Serializer Filters\"},{\"id\":\"creating-custom-filters\",\"title\":\"Creating Custom Filters\"}]},{\"id\":\"serialization\",\"title\":\"The Serialization Process\",\"anchors\":[{\"id\":\"overall-process\",\"title\":\"Overall Process\"},{\"id\":\"available-serializers\",\"title\":\"Available Serializers\"},{\"id\":\"the-serialization-context-groups-and-relations\",\"title\":\"The Serialization Context, Groups and Relations\"},{\"id\":\"embedding-relations\",\"title\":\"Using Different Serialization Groups per Operation\"},{\"id\":\"embedding-relations\",\"title\":\"Embedding Relations\"},{\"id\":\"changing-the-serialization-context-dynamically\",\"title\":\"Changing the Serialization Context Dynamically\"},{\"id\":\"name-conversion\",\"title\":\"Name Conversion\"},{\"id\":\"entity-identifier-case\",\"title\":\"Entity Identifier Case\"},{\"id\":\"writable-entity-identifier\",\"title\":\"Writable Entity Identifier\"},{\"id\":\"embedding-the-json-ld-context\",\"title\":\"Embedding the JSON-LD Context\"},{\"id\":\"decorating-a-serializer-and-add-extra-data\",\"title\":\"Decorating a Serializer and Add Extra Data\"}]},{\"id\":\"content-negotiation\",\"title\":\"Content Negotiation\",\"anchors\":[{\"id\":\"enabling-several-formats\",\"title\":\"Enabling Several Formats\"},{\"id\":\"registering-a-custom-serializer\",\"title\":\"Registering a Custom Serializer\"},{\"id\":\"creating-a-responder\",\"title\":\"Creating a Responder\"},{\"id\":\"writing-a-custom-normalizer\",\"title\":\"Writing a Custom Normalizer\"}]},{\"id\":\"validation\",\"title\":\"Validation\",\"anchors\":[{\"id\":\"using-validation-groups\",\"title\":\"Using Validation Groups\"},{\"id\":\"dynamic-validation-groups\",\"title\":\"Dynamic Validation Groups\"}]},{\"id\":\"pagination\",\"title\":\"Pagination\",\"anchors\":[{\"id\":\"disabling-the-pagination\",\"title\":\"Disabling the Pagination\"},{\"id\":\"changing-the-number-of-items-per-page\",\"title\":\"Changing the Number of Items per Page\"}]},{\"id\":\"events\",\"title\":\"The Event System\",\"anchors\":null},{\"id\":\"data-providers\",\"title\":\"Data Providers\",\"anchors\":[{\"id\":\"creating-a-custom-data-provider\",\"title\":\"Custom Collection Data Provider\"},{\"id\":\"returning-a-paged-collection\",\"title\":\"Custom Item Data Provider\"}]},{\"id\":\"extensions\",\"title\":\"Extensions\",\"anchors\":[{\"id\":\"custom-extension\",\"title\":\"Custom Extension\"},{\"id\":\"example\",\"title\":\"Filter upon the current user\"}]},{\"id\":\"jwt\",\"title\":\"JWT Authentification\",\"anchors\":[{\"id\":\"installing-lexikjwtauthenticationnundle\",\"title\":\"Installing LexikJWTAuthenticationBundle\"},{\"id\":\"documenting-the-authentication-mechanism-with-swagger-open-api\",\"title\":\"Documenting the Authentication Mechanism with Swagger/Open API\"},{\"id\":\"testing-with-behat\",\"title\":\"Testing with Behat\"}]},{\"id\":\"security\",\"title\":\"Security\",\"anchors\":null},{\"id\":\"swagger\",\"title\":\"Swagger Support\",\"anchors\":[{\"id\":\"overriding-the-swagger-documentation\",\"title\":\"Overriding the Swagger documentation\"},{\"id\":\"using-the-swagger-context\",\"title\":\"Using the Swagger Context\"}]},{\"id\":\"performance\",\"title\":\"Performance\",\"anchors\":[{\"id\":\"enabling-the-builtin-http-cache-invalidation-system\",\"title\":\"Enabling the Builtin HTTP Cache Invalidation System\"},{\"id\":\"enabling-the-metadata-cache\",\"title\":\"Enabling the Metadata Cache\"},{\"id\":\"using-ppm-php-pm\",\"title\":\"Using PPM (PHP-PM)\"},{\"id\":\"doctrine-queries-and-indexes\",\"title\":\"Doctrine Queries and Indexes\"}]},{\"id\":\"operation-path-naming\",\"title\":\"Operation Path Naming\",\"anchors\":[{\"id\":\"configuration\",\"title\":\"Configuration\"},{\"id\":\"create-a-custom-operation-path-resolver\",\"title\":\"Create a Custom Operation Path Naming\"}]},{\"id\":\"form-data\",\"title\":\"Accept \\\"application/x-www-form-urlencoded\\\" Form Data\",\"anchors\":null},{\"id\":\"external-vocabularies\",\"title\":\"Using External Vocabularies\",\"anchors\":null},{\"id\":\"extending-jsonld-context\",\"title\":\"Extending the JSON-LD context\",\"anchors\":null},{\"id\":\"fosuser-bundle\",\"title\":\"FOSUserBundle Integration\",\"anchors\":[{\"id\":\"installing-the-bundle\",\"title\":\"Installing the Bundle\"},{\"id\":\"enabling-the-bridge\",\"title\":\"Enabling the Bridge\"},{\"id\":\"creating-a-user-entity-with-serialization-groups\",\"title\":\"Creating a \\\"User\\\" Entity with Serialization Groups\"}]},{\"id\":\"nelmio-api-doc\",\"title\":\"NelmioApiDocBundle integration\",\"anchors\":null},{\"id\":\"angularjs-integration\",\"title\":\"AngularJS Integration\",\"anchors\":[{\"id\":\"restangular\",\"title\":\"Restangular\"},{\"id\":\"ng-admin\",\"title\":\"ng-admin\"}]}]}},{\"node\":{\"title\":\"The Schema Generator Component\",\"path\":\"schema-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":null},{\"id\":\"configuration\",\"title\":\"Configuration\",\"anchors\":null}]}},{\"node\":{\"title\":\"The Admin Component\",\"path\":\"admin\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"getting-started\",\"title\":\"Getting Started\",\"anchors\":[{\"id\":\"installation\",\"title\":\"Installation\"},{\"id\":\"creating-the-admin\",\"title\":\"Creating the Admin\"},{\"id\":\"customizing-the-admin\",\"title\":\"Customizing the Admin\"}]},{\"id\":\"authentication-support\",\"title\":\"Authentication Support\",\"anchors\":null},{\"id\":\"handling-relations-to-collections\",\"title\":\"Handling Relations to Collections\",\"anchors\":[{\"id\":\"using-an-autocomplete-input-for-relations\",\"title\":\"Using an Autocomplete Input for Relations\"}]}]}},{\"node\":{\"title\":\"The Client Generator Component\",\"path\":\"client-generator\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":[{\"id\":\"features\",\"title\":\"Features\"}]},{\"id\":\"react\",\"title\":\"React generator\",\"anchors\":null},{\"id\":\"vuejs\",\"title\":\"Vue.js generator\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null}]}},{\"node\":{\"title\":\"Deployment\",\"path\":\"deployment\",\"items\":[{\"id\":\"index\",\"title\":\"Introduction\",\"anchors\":null},{\"id\":\"heroku\",\"title\":\"Deploying an API Platform App on Heroku\",\"anchors\":null},{\"id\":\"docker\",\"title\":\"Using API Platform with Docker\",\"anchors\":[{\"id\":\"services\",\"title\":\"Services\"},{\"id\":\"installation\",\"title\":\"Installation\"}]}]}},{\"node\":{\"title\":\"Extra\",\"path\":\"extra\",\"items\":[{\"id\":\"philosophy\",\"title\":\"The Project's Philosophy\",\"anchors\":null},{\"id\":\"troubleshooting\",\"title\":\"Troubleshooting\",\"anchors\":null},{\"id\":\"contribution-guides\",\"title\":\"Contribution Guides\",\"anchors\":null},{\"id\":\"conduct\",\"title\":\"Contributor Code Of Conduct\",\"anchors\":null}]}}]}},\"pathContext\":{\"path\":\"docs/core/events\",\"current\":{\"path\":\"docs/core/events\",\"title\":\"The API Component - The Event System\"},\"prev\":{\"path\":\"docs/core/pagination\",\"title\":\"Pagination\",\"rootPath\":\"The API Component\"},\"next\":{\"path\":\"docs/core/data-providers\",\"title\":\"Data Providers\",\"rootPath\":\"The API Component\"}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-core-events.json\n// module id = 393\n// module chunks = 80086460246139"],"sourceRoot":""}