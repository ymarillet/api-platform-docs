webpackJsonp([0xbba26ed945c3],{404:function(n,a){n.exports={data:{post:{html:'<h1 id="operations"><a href="#operations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Operations</h1>\n<p>API Platform Core relies on the concept of operations. Operations can be applied to a resource exposed by the API. From\nan implementation point of view, an operation is a link between a resource, a route and its related controller.</p>\n<p>API Platform automatically registers typical <a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete" target="_blank" rel="nofollow noopener noreferrer">CRUD</a> operations\nand describes them in the exposed documentation (Hydra and Swagger). It also creates and registers routes corresponding\nto these operations in the Symfony routing system (if it is available).</p>\n<p>The behavior of built-in operations is briefly presented in the <a href="/docs/core/getting-started#mapping-the-entities">Getting started</a>\nguide.</p>\n<p>The list of enabled operations can be configured on a per resource basis. Creating custom operations on specific routes\nis also possible.</p>\n<p>There are two types of operations: collection operations and item operations.</p>\n<p>Collection operations act on a collection of resources. By default two routes are implemented: <code>POST</code> and <code>GET</code>. Item\noperations act on an individual resource. 3 default routes are defined <code>GET</code>, <code>PUT</code> and <code>DELETE</code>.</p>\n<p>When the <code>ApiPlatform\\Core\\Annotation\\ApiResource</code> annotation is applied to an entity class, the following built-in CRUD\noperations are automatically enabled:</p>\n<p><em>Collection operations</em></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>GET</code></td>\n<td>yes</td>\n<td>Retrieve the (paginated) list of elements</td>\n</tr>\n<tr>\n<td><code>POST</code></td>\n<td>no</td>\n<td>Create a new element</td>\n</tr>\n</tbody>\n</table>\n<p><em>Item operations</em></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>GET</code></td>\n<td>yes</td>\n<td>Retrieve element</td>\n</tr>\n<tr>\n<td><code>PUT</code></td>\n<td>no</td>\n<td>Update an element</td>\n</tr>\n<tr>\n<td><code>DELETE</code></td>\n<td>no</td>\n<td>Delete an element</td>\n</tr>\n</tbody>\n</table>\n<h2 id="enabling-and-disabling-operations"><a href="#enabling-and-disabling-operations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Enabling and Disabling Operations</h2>\n<p>If no operation is specified, all default CRUD operations are automatically registered. It is also possible - and recommended\nfor large projects - to define operations explicitly.</p>\n<p>Keep in mind that <code>collectionOperations</code> and <code>itemOperations</code> behave independently. For instance, if you don\'t explicitly\nconfigure operations for <code>collectionOperations</code>, <code>GET</code> and <code>POST</code> operations will be automatically registered, even if you\nexplicitly configure <code>itemOperations</code>. The reverse is also true.</p>\n<p>Operations can be configured using annotations, XML or YAML. In the following examples, we enable only the built-in operation\nfor the <code>GET</code> method for both <code>collectionOperations</code> and <code>itemOperations</code> to create a readonly endpoint.</p>\n<p><code>itemOperations</code> and <code>collectionOperations</code> are arrays containing a list of operation. Each operation is defined by a key\ncorresponding to the name of the operation that can be anything you want and an array of properties as value. If an\nempty list of operations is provided, all operations are disabled.</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Entity/Book.php</span>\n\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiResource</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @ApiResource(\n *     collectionOperations={"get"={"method"="GET"}},\n *     itemOperations={"get"={"method"="GET"}}\n *     )\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">Book</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Alternatively, you can use the YAML configuration format:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token comment"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class="token key atrule">AppBundle\\Entity\\Book</span><span class="token punctuation">:</span>\n    <span class="token key atrule">collectionOperations</span><span class="token punctuation">:</span>\n        <span class="token key atrule">get</span><span class="token punctuation">:</span>\n            <span class="token key atrule">method</span><span class="token punctuation">:</span> \'GET\' <span class="token comment"># nothing more to add if we want to keep the default controller</span>\n    <span class="token key atrule">itemOperations</span><span class="token punctuation">:</span>\n        <span class="token key atrule">get</span><span class="token punctuation">:</span>\n            <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token string">\'GET\'</span>\n</code></pre>\n      </div>\n<p>Or the XML configuration format:</p>\n<div class="gatsby-highlight">\n      <pre class="language-xml"><code><span class="token comment">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppBundle\\Entity\\Book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperations</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperation</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperation</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperations</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collectionOperations</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collectionOperation</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collectionOperation</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collectionOperations</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>API Platform Core is smart enough to automatically register the applicable Symfony route referencing a built-in CRUD action\njust by specifying the enabled HTTP method.</p>\n<h2 id="configuring-operations"><a href="#configuring-operations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Configuring Operations</h2>\n<p>The URL, the HTTP method and the Hydra context passed to documentation generators of operations is easy to configure.</p>\n<p>In the next example, both <code>GET</code> and <code>PUT</code> operations are registered with custom URLs. Those will override the default generated\nURLs. In addition to that, we replace the Hydra context for the <code>PUT</code> operation, and require the <code>id</code> parameter to be an integer.</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Entity/Book.php</span>\n\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiResource</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @ApiResource(itemOperations={\n *     "get"={"method"="GET", "path"="/grimoire/{id}", "requirements"={"id"="\\d+"}},\n *     "put"={"method"="PUT", "path"="/grimoire/{id}/update", "hydra_context"={"foo"="bar"}},\n * })\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">Book</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Or in YAML:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token comment"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class="token key atrule">AppBundle\\Entity\\Book</span><span class="token punctuation">:</span>\n    <span class="token key atrule">itemOperations</span><span class="token punctuation">:</span>\n        <span class="token key atrule">get</span><span class="token punctuation">:</span>\n            <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token string">\'GET\'</span>\n            <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">\'/grimoire/{id}\'</span>\n            <span class="token key atrule">requirements</span><span class="token punctuation">:</span>\n                <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">\'\\d+\'</span>\n        <span class="token key atrule">put</span><span class="token punctuation">:</span>\n            <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token string">\'PUT\'</span>\n            <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">\'/grimoire/{id}/update\'</span>\n            <span class="token key atrule">hydra_context</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">foo</span><span class="token punctuation">:</span> <span class="token string">\'bar\'</span> <span class="token punctuation">}</span>\n            <span class="token key atrule">requirements</span><span class="token punctuation">:</span>\n                <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">\'\\d+\'</span>\n</code></pre>\n      </div>\n<p>Or in XML:</p>\n<div class="gatsby-highlight">\n      <pre class="language-xml"><code><span class="token comment">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppBundle\\Entity\\Book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperations</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperation</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>/grimoire/{id}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>requirements<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\\d+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperation</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperation</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>put<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PUT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>/grimoire/{id}/update<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hydra_context<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>bar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>requirements<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\\d+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperation</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperations</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<h2 id="subresources"><a href="#subresources" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Subresources</h2>\n<p>Since ApiPlatform 2.1, you can declare subresources. A subresource is a collection or an item that belongs to another resource. The starting point of a subresource must be a relation on an existing resource.</p>\n<p>For example, let\'s create two entities (Question, Answer) and set up a subresource so that <code>/question/42/answer</code> gives us the answer to the question 42:</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Entity/Answer.php</span>\n\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiResource</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>ORM<span class="token punctuation">\\</span>Mapping</span> <span class="token keyword">as</span> <span class="token constant">ORM</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @ORM\\Entity\n * @ApiResource\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">Answer</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">/**\n     * @ORM\\Column(type="integer")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy="AUTO")\n     */</span>\n    <span class="token keyword">private</span> <span class="token variable">$id</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * @ORM\\Column\n     */</span>\n    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * @ORM\\OneToOne(targetEntity="Question", mappedBy="answer")\n     */</span>\n    <span class="token keyword">public</span> <span class="token variable">$question</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Entity/Question.php</span>\n\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiProperty</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiResource</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiSubresource</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>ORM<span class="token punctuation">\\</span>Mapping</span> <span class="token keyword">as</span> <span class="token constant">ORM</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @ORM\\Entity\n * @ApiResource\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">Question</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">/**\n     * @ORM\\Column(type="integer")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy="AUTO")\n     */</span>\n    <span class="token keyword">private</span> <span class="token variable">$id</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * @ORM\\Column\n     */</span>\n    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/**\n     * @ORM\\OneToOne(targetEntity="Answer", inversedBy="question")\n     * @ORM\\JoinColumn(referencedColumnName="id", unique=true)\n     * @ApiSubresource\n     */</span>\n    <span class="token keyword">public</span> <span class="token variable">$answer</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Note that all we had to do is to set up <code>@ApiSubresource</code> on the <code>Question::answer</code> relation. Because the <code>answer</code> is a to-one relation, we know that this subresource is an item. Therefore the response will look like this:</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"/contexts/Answer"</span><span class="token punctuation">,</span>\n  <span class="token property">"@id"</span><span class="token operator">:</span> <span class="token string">"/answers/42"</span><span class="token punctuation">,</span>\n  <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"Answer"</span><span class="token punctuation">,</span>\n  <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n  <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"Life, the Universe, and Everything"</span><span class="token punctuation">,</span>\n  <span class="token property">"question"</span><span class="token operator">:</span> <span class="token string">"/questions/42"</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>If you put the subresource on a relation that is to-many, you will retrieve a collection.</p>\n<p>Last but not least, Subresources can be nested, such that <code>/questions/42/answer/comments</code> will get the collection of comments for the answer to question 42.</p>\n<p>You may want custom groups on subresources. Because a subresource is nothing more than a collection operation, you can set <code>normalization_context</code> or <code>denormalization_context</code> on that operation. To do so, you need to override <code>collectionOperations</code>. Based on the above operation, because we retrieve an answer, we need to alter it\'s configuration:</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Entity/Answer.php</span>\n\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiResource</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @ApiResource(collectionOperations={"api_questions_answer_get_subresource"={"method"="GET", "normalization_context"={"groups"={"foobar"}}}})\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">Answer</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Or using YAML:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token comment"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class="token key atrule">AppBundle\\Entity\\Answer</span><span class="token punctuation">:</span>\n    <span class="token key atrule">collectionOperations</span><span class="token punctuation">:</span>\n        <span class="token key atrule">api_questions_answer_get_subresource</span><span class="token punctuation">:</span>\n            <span class="token key atrule">method</span><span class="token punctuation">:</span> \'GET\' <span class="token comment"># nothing more to add if we want to keep the default controller</span>\n            <span class="token key atrule">normalization_context</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">\'groups\'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'foobar\'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Or in XML:</p>\n<div class="gatsby-highlight">\n      <pre class="language-xml"><code><span class="token comment">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppBundle\\Entity\\Answer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collectionOperations</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collectionOperation</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>api_questions_answer_get_subresource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>normalization_context<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>groups<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span><span class="token punctuation">></span></span>foobar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">></span></span>\n                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collectionOperation</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collectionOperations</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Note that the operation name, here <code>api_questions_answer_get_subresource</code>, is the important keyword.\nIt\'ll be automatically set to <code>$resources_$subresource(s)_get_subresource</code>. To find the correct operation name you\nmay use <code>bin/console debug:router</code>.</p>\n<h2 id="creating-custom-operations-and-controllers"><a href="#creating-custom-operations-and-controllers" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Creating Custom Operations and Controllers</h2>\n<p>API Platform can leverage the Symfony routing system to register custom operation related to custom controllers. Such custom\ncontrollers can be any valid <a href="http://symfony.com/doc/current/book/controller.html" target="_blank" rel="nofollow noopener noreferrer">Symfony controller</a>, including standard\nSymfony controllers extending the <a href="http://api.symfony.com/3.1/Symfony/Bundle/FrameworkBundle/Controller/Controller.html" target="_blank" rel="nofollow noopener noreferrer"><code>Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller</code></a>\nhelper class.</p>\n<p>However, API Platform recommends to use <strong>action classes</strong> instead of typical Symfony controllers. Internally, API Platform\nimplements the <a href="https://github.com/pmjones/adr" target="_blank" rel="nofollow noopener noreferrer">Action-Domain-Responder</a> pattern (ADR), a web-specific refinement of <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank" rel="nofollow noopener noreferrer">MVC</a>.</p>\n<p>Note: <a href="/docs/core/events">the event system</a> should be preferred over custom controllers when applicable.</p>\n<p>The distribution of API Platform also eases the implementation of the ADR pattern: it automatically registers action classes\nstored in <code>src/AppBundle/Action</code> and <code>src/AppBundle/Controller</code> as autowired services.</p>\n<p>Thanks to the <a href="http://symfony.com/doc/current/components/dependency_injection/autowiring.html" target="_blank" rel="nofollow noopener noreferrer">autowiring</a> feature of the\nSymfony Dependency Injection container, services required by an action can be type-hinted in its constructor, it will be\nautomatically instantiated and injected, without having to declare it explicitly.</p>\n<p>In the following example, the built-in <code>GET</code> operation is registered as well as a custom operation called <code>special</code>.\nThe <code>special</code> operation reference the Symfony route named <code>book_special</code>.</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Entity/Book.php</span>\n\n<span class="token keyword">use</span> <span class="token package">ApiPlatform<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>ApiResource</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * @ApiResource(itemOperations={\n *     "get"={"method"="GET"},\n *     "special"={"route_name"="book_special"}\n * })\n */</span>\n<span class="token keyword">class</span> <span class="token class-name">Book</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Or in YAML:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token comment"># src/AppBundle/Resources/config/api_resources/resources.yml</span>\n<span class="token key atrule">AppBundle\\Entity\\Book</span><span class="token punctuation">:</span>\n    <span class="token key atrule">itemOperations</span><span class="token punctuation">:</span>\n        <span class="token key atrule">get</span><span class="token punctuation">:</span>\n            <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token string">\'GET\'</span>\n        <span class="token key atrule">special</span><span class="token punctuation">:</span>\n            <span class="token key atrule">route_name</span><span class="token punctuation">:</span> <span class="token string">\'book_special\'</span>\n</code></pre>\n      </div>\n<p>Or in XML:</p>\n<div class="gatsby-highlight">\n      <pre class="language-xml"><code><span class="token comment">&lt;!-- src/AppBundle/Resources/config/api_resources/resources.xml --></span>\n<span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>\n           <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api-platform.com/schema/metadata\n           https://api-platform.com/schema/metadata/metadata-2.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppBundle\\Entity\\Book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperations</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperation</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>method<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperation</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>itemOperation</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>special<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attribute</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>route_name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>book_special<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attribute</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperation</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>itemOperations</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>API Platform will automatically map this <code>special</code> operation with the route <code>book_special</code>. Let\'s create a custom action\nand its related route using annotations:</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Action/BookSpecial.php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">AppBundle<span class="token punctuation">\\</span>Action</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">AppBundle<span class="token punctuation">\\</span>Entity<span class="token punctuation">\\</span>Book</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>Common<span class="token punctuation">\\</span>Persistence<span class="token punctuation">\\</span>ManagerRegistry</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Sensio<span class="token punctuation">\\</span>Bundle<span class="token punctuation">\\</span>FrameworkExtraBundle<span class="token punctuation">\\</span>Configuration<span class="token punctuation">\\</span>Method</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Routing<span class="token punctuation">\\</span>Annotation<span class="token punctuation">\\</span>Route</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BookSpecial</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token variable">$myService</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span>MyService <span class="token variable">$myService</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">myService</span> <span class="token operator">=</span> <span class="token variable">$myService</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * @Route(\n     *     name="book_special",\n     *     path="/books/{id}/special",\n     *     defaults={"_api_resource_class"=Book::class, "_api_item_operation_name"="special"}\n     * )\n     * @Method("PUT")\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token comment">// API Platform retrieves the PHP entity using the data provider then (for POST and</span>\n                                    <span class="token comment">// PUT method) deserializes user data in it. Then passes it to the action. Here $data</span>\n                                    <span class="token comment">// is an instance of Book having the given ID. By convention, the action\'s parameter</span>\n                                    <span class="token comment">// must be called $data.</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">myService</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span> <span class="token comment">// API Platform will automatically validate, persist (if you use Doctrine) and serialize an entity</span>\n                      <span class="token comment">// for you. If you prefer to do it yourself, return an instance of Symfony\\Component\\HttpFoundation\\Response</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>This custom operation behaves exactly like the built-in operation: it returns a JSON-LD document corresponding to the id\npassed in the URL.</p>\n<p>It is mandatory to set the <code>_api_resource_class</code> and <code>_api_item_operation_name</code> (or <code>_api_collection_operation_name</code> for a collection\noperation) in the parameters of the route (<code>defaults</code> key). It allows API Platform and the Symfony routing system to hook\ntogether.</p>\n<p>Here we consider that the autowiring enabled for controller classes (the default when using the API Platform distribution).\nThis action will be automatically registered as a service (the service name is the same as the class name: <code>AppBundle\\Action\\BookSpecial</code>).</p>\n<p>API Platform automatically retrieves the appropriate PHP entity then deserializes it, and for <code>POST</code> and <code>PUT</code> requests\nupdates the entity with data provided by the user.</p>\n<p>Services (<code>$myService</code> here) are automatically injected thanks to the autowiring feature. You can type-hint any service\nyou need and it will be autowired too.</p>\n<p>The <code>__invoke</code> method of the action is called when the matching route is hit. It can return either an instance of <code>Symfony\\Component\\HttpFoundation\\Response</code>\n(that will be displayed to the client immediately by the Symfony kernel) or, like in this example, an instance of an entity\nmapped as a resource (or a collection of instances for collection operations).\nIn this case, the entity will pass through <a href="/docs/core/events">all built-in event listeners</a> of API Platform. It will be\nautomatically validated, persisted and serialized in JSON-LD. Then the Symfony kernel will send the resulting document to\nthe client.</p>\n<p>Alternatively, you can also use standard Symfony controller and YAML or XML route declarations. The following example does\nexactly the same thing than the previous example in a more Symfony-like fashion:</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token comment">// src/AppBundle/Controller/BookController.php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">AppBundle<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">AppBundle<span class="token punctuation">\\</span>Entity<span class="token punctuation">\\</span>Book</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Bundle<span class="token punctuation">\\</span>FrameworkBundle<span class="token punctuation">\\</span>Controller<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">BookController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">specialAction</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'my_service\'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="token comment"># app/config/routing.yml</span>\n<span class="token key atrule">book_special</span><span class="token punctuation">:</span>\n    <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">\'/books/{id}/special\'</span>\n    <span class="token key atrule">methods</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">\'PUT\'</span><span class="token punctuation">]</span>\n    <span class="token key atrule">defaults</span><span class="token punctuation">:</span>\n        <span class="token key atrule">_controller</span><span class="token punctuation">:</span> <span class="token string">\'AppBundle:Book:special\'</span>\n        <span class="token key atrule">_api_resource_class</span><span class="token punctuation">:</span> <span class="token string">\'AppBundle\\Entity\\Book\'</span>\n        <span class="token key atrule">_api_item_operation_name</span><span class="token punctuation">:</span> <span class="token string">\'special\'</span>\n</code></pre>\n      </div>'
},navDoc:{edges:[{node:{title:"The Distribution",path:"distribution",items:[{id:"index",title:"Creating a Fully Featured API in 5 Minutes",anchors:null},{id:"testing",title:"Testing and Specifying the API",anchors:null}]}},{node:{title:"The API Component",path:"core",items:[{id:"index",title:"Introduction",anchors:null},{id:"getting-started",title:"Getting Started",anchors:[{id:"installing-api-platform-core",title:"Installing API Platform Core"},{id:"before-reading-this-documentation",title:"Before Reading this Documentation"},{id:"mapping-the-entities",title:"Mapping the Entities"}]},{id:"configuration",title:"Configuration",anchors:null},{id:"operations",title:"Operations",anchors:[{id:"enabling-and-disabling-operations",title:"Enabling and Disabling Operations"},{id:"configuring-operations",title:"Configuring Operations"},{id:"subresources",title:"Subresources"},{id:"creating-custom-operations-and-controllers",title:"Creating Custom Operations and Controllers"}]},{id:"default-order",title:"Overriding Default Order",anchors:null},{id:"filters",title:"Filters",anchors:[{id:"doctrine-orm-filters",title:"Doctrine ORM Filters"},{id:"serializer-filters",title:"Serializer Filters"},{id:"creating-custom-filters",title:"Creating Custom Filters"}]},{id:"serialization",title:"The Serialization Process",anchors:[{id:"overall-process",title:"Overall Process"},{id:"available-serializers",title:"Available Serializers"},{id:"the-serialization-context-groups-and-relations",title:"The Serialization Context, Groups and Relations"},{id:"embedding-relations",title:"Using Different Serialization Groups per Operation"},{id:"embedding-relations",title:"Embedding Relations"},{id:"changing-the-serialization-context-dynamically",title:"Changing the Serialization Context Dynamically"},{id:"name-conversion",title:"Name Conversion"},{id:"entity-identifier-case",title:"Entity Identifier Case"},{id:"writable-entity-identifier",title:"Writable Entity Identifier"},{id:"embedding-the-json-ld-context",title:"Embedding the JSON-LD Context"},{id:"decorating-a-serializer-and-add-extra-data",title:"Decorating a Serializer and Add Extra Data"}]},{id:"content-negotiation",title:"Content Negotiation",anchors:[{id:"enabling-several-formats",title:"Enabling Several Formats"},{id:"registering-a-custom-serializer",title:"Registering a Custom Serializer"},{id:"creating-a-responder",title:"Creating a Responder"},{id:"writing-a-custom-normalizer",title:"Writing a Custom Normalizer"}]},{id:"validation",title:"Validation",anchors:[{id:"using-validation-groups",title:"Using Validation Groups"},{id:"dynamic-validation-groups",title:"Dynamic Validation Groups"}]},{id:"pagination",title:"Pagination",anchors:[{id:"disabling-the-pagination",title:"Disabling the Pagination"},{id:"changing-the-number-of-items-per-page",title:"Changing the Number of Items per Page"}]},{id:"events",title:"The Event System",anchors:null},{id:"data-providers",title:"Data Providers",anchors:[{id:"creating-a-custom-data-provider",title:"Custom Collection Data Provider"},{id:"returning-a-paged-collection",title:"Custom Item Data Provider"}]},{id:"extensions",title:"Extensions",anchors:[{id:"custom-extension",title:"Custom Extension"},{id:"example",title:"Filter upon the current user"}]},{id:"jwt",title:"JWT Authentification",anchors:[{id:"installing-lexikjwtauthenticationnundle",title:"Installing LexikJWTAuthenticationBundle"},{id:"documenting-the-authentication-mechanism-with-swagger-open-api",title:"Documenting the Authentication Mechanism with Swagger/Open API"},{id:"testing-with-behat",title:"Testing with Behat"}]},{id:"security",title:"Security",anchors:null},{id:"swagger",title:"Swagger Support",anchors:[{id:"overriding-the-swagger-documentation",title:"Overriding the Swagger documentation"},{id:"using-the-swagger-context",title:"Using the Swagger Context"}]},{id:"performance",title:"Performance",anchors:[{id:"enabling-the-builtin-http-cache-invalidation-system",title:"Enabling the Builtin HTTP Cache Invalidation System"},{id:"enabling-the-metadata-cache",title:"Enabling the Metadata Cache"},{id:"using-ppm-php-pm",title:"Using PPM (PHP-PM)"},{id:"doctrine-queries-and-indexes",title:"Doctrine Queries and Indexes"}]},{id:"operation-path-naming",title:"Operation Path Naming",anchors:[{id:"configuration",title:"Configuration"},{id:"create-a-custom-operation-path-resolver",title:"Create a Custom Operation Path Naming"}]},{id:"form-data",title:'Accept "application/x-www-form-urlencoded" Form Data',anchors:null},{id:"external-vocabularies",title:"Using External Vocabularies",anchors:null},{id:"extending-jsonld-context",title:"Extending the JSON-LD context",anchors:null},{id:"fosuser-bundle",title:"FOSUserBundle Integration",anchors:[{id:"installing-the-bundle",title:"Installing the Bundle"},{id:"enabling-the-bridge",title:"Enabling the Bridge"},{id:"creating-a-user-entity-with-serialization-groups",title:'Creating a "User" Entity with Serialization Groups'}]},{id:"nelmio-api-doc",title:"NelmioApiDocBundle integration",anchors:null},{id:"angularjs-integration",title:"AngularJS Integration",anchors:[{id:"restangular",title:"Restangular"},{id:"ng-admin",title:"ng-admin"}]}]}},{node:{title:"The Schema Generator Component",path:"schema-generator",items:[{id:"index",title:"Introduction",anchors:null},{id:"getting-started",title:"Getting Started",anchors:null},{id:"configuration",title:"Configuration",anchors:null}]}},{node:{title:"The Admin Component",path:"admin",items:[{id:"index",title:"Introduction",anchors:[{id:"features",title:"Features"}]},{id:"getting-started",title:"Getting Started",anchors:[{id:"installation",title:"Installation"},{id:"creating-the-admin",title:"Creating the Admin"},{id:"customizing-the-admin",title:"Customizing the Admin"}]},{id:"authentication-support",title:"Authentication Support",anchors:null},{id:"handling-relations-to-collections",title:"Handling Relations to Collections",anchors:[{id:"using-an-autocomplete-input-for-relations",title:"Using an Autocomplete Input for Relations"}]}]}},{node:{title:"The Client Generator Component",path:"client-generator",items:[{id:"index",title:"Introduction",anchors:[{id:"features",title:"Features"}]},{id:"react",title:"React generator",anchors:null},{id:"vuejs",title:"Vue.js generator",anchors:null},{id:"troubleshooting",title:"Troubleshooting",anchors:null}]}},{node:{title:"Deployment",path:"deployment",items:[{id:"index",title:"Introduction",anchors:null},{id:"heroku",title:"Deploying an API Platform App on Heroku",anchors:null},{id:"docker",title:"Using API Platform with Docker",anchors:[{id:"services",title:"Services"},{id:"installation",title:"Installation"}]}]}},{node:{title:"Extra",path:"extra",items:[{id:"philosophy",title:"The Project's Philosophy",anchors:null},{id:"troubleshooting",title:"Troubleshooting",anchors:null},{id:"contribution-guides",title:"Contribution Guides",anchors:null},{id:"conduct",title:"Contributor Code Of Conduct",anchors:null}]}}]}},pathContext:{path:"docs/core/operations",current:{path:"docs/core/operations",title:"The API Component - Operations"},prev:{path:"docs/core/configuration",title:"Configuration",rootPath:"The API Component"},next:{path:"docs/core/default-order",title:"Overriding Default Order",rootPath:"The API Component"}}}}});
//# sourceMappingURL=path---docs-core-operations-5d187adb7401c41c1a3a.js.map